{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortimers\/init(_:)","title":"init(Act)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortimers\/cancel(for:)","title":"func cancel(for: TimerKey)","type":"method"},{"path":"\/documentation\/distributedactors\/actortimers\/cancelall()","title":"func cancelAll()","type":"method"},{"path":"\/documentation\/distributedactors\/actortimers\/exists(key:)","title":"func exists(key: TimerKey) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/actortimers\/startperiodic(key:interval:call:)","title":"func startPeriodic(key: TimerKey, interval: TimeAmount, call: () async -> Void)","type":"method"},{"path":"\/documentation\/distributedactors\/actortimers\/startsingle(key:delay:call:)","title":"func startSingle(key: TimerKey, delay: TimeAmount, call: () async -> Void)","type":"method"}],"path":"\/documentation\/distributedactors\/actortimers","title":"ActorTimers","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystem\/shutdown\/wait()","title":"func wait() throws","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/shutdown\/wait(atmost:)","title":"func wait(atMost: TimeAmount) throws","type":"method"}],"path":"\/documentation\/distributedactors\/clustersystem\/shutdown","title":"ClusterSystem.Shutdown","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystem\/init()","title":"init() async","type":"init"},{"path":"\/documentation\/distributedactors\/clustersystem\/init(_:configuredwith:)","title":"init(String, configuredWith: (inout ClusterSystemSettings) -> Void) async","type":"init"},{"path":"\/documentation\/distributedactors\/clustersystem\/init(_:settings:)","title":"init(String, settings: ClusterSystemSettings) async","type":"init"},{"path":"\/documentation\/distributedactors\/clustersystem\/init(settings:)","title":"init(settings: ClusterSystemSettings) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystem\/cluster","title":"var cluster: ClusterControl","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystem\/deadletters","title":"var deadLetters: _ActorRef<DeadLetter>","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystem\/log","title":"let log: Logger","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystem\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystem\/receptionist","title":"var receptionist: OpLogDistributedReceptionist","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystem\/serialization","title":"var serialization: Serialization","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystem\/settings","title":"let settings: ClusterSystemSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystem\/park(atmost:)","title":"func park(atMost: TimeAmount?) throws","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/personaldeadletters(type:recipient:)","title":"func personalDeadLetters<Message>(type: Message.Type, recipient: ActorAddress) -> _ActorRef<Message>","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/remotecall(on:target:invocation:throwing:returning:)","title":"func remoteCall<Act, Err, Res>(on: Act, target: RemoteCallTarget, invocation: inout InvocationEncoder, throwing: Err.Type, returning: Res.Type) async throws -> Res","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/remotecallvoid(on:target:invocation:throwing:)","title":"func remoteCallVoid<Act, Err>(on: Act, target: RemoteCallTarget, invocation: inout InvocationEncoder, throwing: Err.Type) async throws","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/shutdown(queue:aftershutdowncompleted:)","title":"func shutdown(queue: DispatchQueue, afterShutdownCompleted: (Error?) -> Void) -> Shutdown","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystem\/actorid","title":"ClusterSystem.ActorID","type":"typealias"},{"path":"\/documentation\/distributedactors\/clustersystem\/invocationdecoder","title":"ClusterSystem.InvocationDecoder","type":"typealias"},{"path":"\/documentation\/distributedactors\/clustersystem\/invocationencoder","title":"ClusterSystem.InvocationEncoder","type":"typealias"},{"path":"\/documentation\/distributedactors\/clustersystem\/resulthandler","title":"ClusterSystem.ResultHandler","type":"typealias"},{"path":"\/documentation\/distributedactors\/clustersystem\/serializationrequirement","title":"ClusterSystem.SerializationRequirement","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystem\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/clustersystem\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystem\/actorready(_:)","title":"func actorReady<Act>(Act)","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/assignid(_:)","title":"func assignID<Act>(Act.Type) -> ClusterSystem.ActorID","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/executedistributedtarget(on:target:invocationdecoder:handler:)","title":"func executeDistributedTarget<Act>(on: Act, target: RemoteCallTarget, invocationDecoder: inout Self.InvocationDecoder, handler: Self.ResultHandler) async throws","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/makeinvocationencoder()","title":"func makeInvocationEncoder() -> InvocationEncoder","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/resignid(_:)","title":"func resignID(ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/clustersystem\/resolve(id:as:)","title":"func resolve<Act>(id: ActorID, as: Act.Type) throws -> Act?","type":"method"}],"path":"\/documentation\/distributedactors\/clustersystem\/distributedactorsystem-implementations","title":"DistributedActorSystem Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/clustersystem\/==(_:_:)","title":"static func == (ClusterSystem, ClusterSystem) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/clustersystem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/clustersystem","title":"ClusterSystem","type":"class"},{"path":"\/documentation\/distributedactors\/deadletteroffice","title":"DeadLetterOffice","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/lifecyclewatchcontainer\/becomewatchedby(watcher:)","title":"func becomeWatchedBy(watcher: AddressableActorRef)","type":"method"},{"path":"\/documentation\/distributedactors\/lifecyclewatchcontainer\/receivenodeterminated(_:)","title":"func receiveNodeTerminated(UniqueNode)","type":"method"},{"path":"\/documentation\/distributedactors\/lifecyclewatchcontainer\/receiveterminated(_:)-1o76a","title":"func receiveTerminated(_Signals.Terminated)","type":"method"},{"path":"\/documentation\/distributedactors\/lifecyclewatchcontainer\/receiveterminated(_:)-65olz","title":"func receiveTerminated(ClusterSystem.ActorID)","type":"method"},{"path":"\/documentation\/distributedactors\/lifecyclewatchcontainer\/termination(of:whenterminated:file:line:)","title":"func termination<Watchee>(of: Watchee, whenTerminated: (ClusterSystem.ActorID) -> Void, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/distributedactors\/lifecyclewatchcontainer\/unwatch(watchee:file:line:)","title":"func unwatch<Watchee>(watchee: Watchee, file: String, line: UInt) -> Watchee","type":"method"}],"path":"\/documentation\/distributedactors\/lifecyclewatchcontainer","title":"LifecycleWatchContainer","type":"class"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/actorsystem","title":"OpLogDistributedReceptionist.ActorSystem","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/whenlocal(_:)","title":"func whenLocal<T>((isolated Self) async throws -> T) async rethrows -> T?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/message","title":"OpLogDistributedReceptionist.Message","type":"typealias"}],"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/distributedactor-implementations","title":"DistributedActor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/lookup(_:)","title":"func lookup<Guest>(DistributedReception.Key<Guest>) async -> Set<Guest>","type":"method"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/register(_:with:)","title":"func register<Guest>(Guest, with: DistributedReception.Key<Guest>) async","type":"method"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/subscribe(to:)","title":"func subscribe<Guest>(to: DistributedReception.Key<Guest>) async -> DistributedReception.GuestListing<Guest>","type":"method"}],"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/distributedreceptionist-implementations","title":"DistributedReceptionist Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/id","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/iswatching(_:)","title":"func isWatching<Watchee>(Watchee) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/unwatch(_:file:line:)","title":"func unwatch<Watchee>(Watchee, file: String, line: UInt) -> Watchee","type":"method"},{"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/watchtermination(of:whenterminated:file:line:)","title":"func watchTermination<Watchee>(of: Watchee, whenTerminated: (ID) -> Void, file: String, line: UInt) -> Watchee","type":"method"}],"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist\/lifecyclewatch-implementations","title":"LifecycleWatch Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/oplogdistributedreceptionist","title":"OpLogDistributedReceptionist","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/context\/allocator","title":"let allocator: NIO.ByteBufferAllocator","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/context\/localnode","title":"var localNode: UniqueNode","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/context\/log","title":"let log: Logger","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/context\/serialization","title":"var serialization: Serialization","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/context\/system","title":"let system: ClusterSystem","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/context\/outboundmanifest(_:)","title":"func outboundManifest<Message>(Message.Type) throws -> Serialization.Manifest","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/context\/resolveactorref(_:identifiedby:userinfo:)","title":"func resolveActorRef<Message>(Message.Type, identifiedBy: ActorAddress, userInfo: [CodingUserInfoKey : Any]) -> _ActorRef<Message>","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/context\/resolveaddressableactorref(identifiedby:userinfo:)","title":"func resolveAddressableActorRef(identifiedBy: ActorAddress, userInfo: [CodingUserInfoKey : Any]) -> AddressableActorRef","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/context\/summontype(from:)","title":"func summonType(from: Serialization.Manifest) throws -> Any.Type","type":"method"}],"path":"\/documentation\/distributedactors\/serialization\/context","title":"Serialization.Context","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/init(fromproto:)","title":"init(fromProto: ProtobufRepresentation)","type":"init"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/init(serializerid:hint:)","title":"init(serializerID: SerializerID, hint: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/hint","title":"let hint: String?","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/serializerid","title":"let serializerID: SerializerID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/toproto()","title":"func toProto() -> ProtobufRepresentation","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/defaultserializerid-8evz5","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/serialization\/manifest\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/serialization\/manifest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/serialization\/manifest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/defaultserializerid-9nost","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/serialization\/manifest\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/init(fromproto:context:)","title":"init(fromProto: ProtobufRepresentation, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> ProtobufRepresentation","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/manifest\/protobufrepresentation","title":"Serialization.Manifest.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/serialization\/manifest\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/serialization\/manifest","title":"Serialization.Manifest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serialized\/buffer","title":"let buffer: Serialization.Buffer","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/serialized\/manifest","title":"let manifest: Serialization.Manifest","type":"property"}],"path":"\/documentation\/distributedactors\/serialization\/serialized","title":"Serialization.Serialized","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/==(_:_:)","title":"static func == (Serialization.SerializerID, Serialization.SerializerID) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/_(_:_:)-5qmyw","title":"static func < (Serialization.SerializerID, Serialization.SerializerID) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/init(_:)","title":"init(UInt32)","type":"init"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/init(integerliteral:)","title":"init(integerLiteral: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/value","title":"let value: UInt32","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/integerliteraltype","title":"Serialization.SerializerID.IntegerLiteralType","type":"typealias"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/serializerid","title":"Serialization.SerializerID.SerializerID","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/donotserialize","title":"static let doNotSerialize: SerializerID","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/foundationjson","title":"static let foundationJSON: SerializerID","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/foundationpropertylistbinary","title":"static let foundationPropertyListBinary: SerializerID","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/foundationpropertylistxml","title":"static let foundationPropertyListXML: SerializerID","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/specializedwithtypehint","title":"static let specializedWithTypeHint: SerializerID","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/check_protobufrepresentable(_:)","title":"static func check_ProtobufRepresentable<M>(M.Type) -> SerializerID","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'...(_:)-2eyq2","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'...(_:)-5jclf","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/serialization\/serializerid\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'...(_:)-2eyq2","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'...(_:)-5jclf","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/serialization\/serializerid\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/_(_:_:)-9i0df","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/_=(_:_:)-2ymcq","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/_=(_:_:)-uzem","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/serialization\/serializerid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/serializerid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/serialization\/serializerid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/serialization\/serializerid","title":"Serialization.SerializerID","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/defaultserializerid","title":"var defaultSerializerID: Serialization.SerializerID","type":"property"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/insecureserializenotregisteredmessages","title":"var insecureSerializeNotRegisteredMessages: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/getspecializedorregistermanifest(_:serializerid:)","title":"func getSpecializedOrRegisterManifest<Message>(Message.Type, serializerID: Serialization.SerializerID) -> Serialization.Manifest","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/register(_:hint:serializerid:alsoregisteractorref:)","title":"func register<Message>(Message.Type, hint: String?, serializerID: SerializerID?, alsoRegisterActorRef: Bool) -> Manifest","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/registerinbound(_:hint:serializerid:)","title":"func registerInbound<Message>(Message.Type, hint: String?, serializerID: SerializerID?) -> Manifest","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/manifest","title":"Serialization.Settings.Manifest","type":"typealias"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/serializerid","title":"Serialization.Settings.SerializerID","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/settings\/default","title":"static var `default`: Settings","type":"property"}],"path":"\/documentation\/distributedactors\/serialization\/settings","title":"Serialization.Settings","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/allocator","title":"let allocator: ByteBufferAllocator","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/deserialize(as:from:file:line:)","title":"func deserialize<T>(as: T.Type, from: Serialized, file: String, line: UInt) throws -> T","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/deserialize(as:from:using:file:line:)","title":"func deserialize<T>(as: T.Type, from: Serialization.Buffer, using: Serialization.Manifest, file: String, line: UInt) throws -> T","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/deserializeany(from:using:file:line:)","title":"func deserializeAny(from: Serialization.Buffer, using: Serialization.Manifest, file: String, line: UInt) throws -> Any","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/outboundmanifest(_:)","title":"func outboundManifest(Any.Type) throws -> Manifest","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/serialize(_:file:line:)","title":"func serialize<Message>(Message, file: String, line: UInt) throws -> Serialized","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/summontype(from:)","title":"func summonType(from: Manifest) throws -> Any.Type","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/verifyserializable(message:)","title":"func verifySerializable<Message>(message: Message) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/buffer\/data(_:)","title":"case data(Data)","type":"case"},{"path":"\/documentation\/distributedactors\/serialization\/buffer\/niobytebuffer(_:)","title":"case nioByteBuffer(ByteBuffer)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/buffer\/count","title":"var count: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serialization\/buffer\/asbytebuffer(allocator:)","title":"func asByteBuffer(allocator: ByteBufferAllocator) -> ByteBuffer","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/buffer\/readdata()","title":"func readData() -> Data","type":"method"},{"path":"\/documentation\/distributedactors\/serialization\/buffer\/stringdebugdescription()","title":"func stringDebugDescription() -> String","type":"method"}],"path":"\/documentation\/distributedactors\/serialization\/buffer","title":"Serialization.Buffer","type":"enum"}],"path":"\/documentation\/distributedactors\/serialization","title":"Serialization","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serializer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serializer\/asanyserializer","title":"var asAnySerializer: AnySerializer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serializer\/deserialize(from:)","title":"func deserialize(from: Serialization.Buffer) throws -> Message","type":"method"},{"path":"\/documentation\/distributedactors\/serializer\/serialize(_:)","title":"func serialize(Message) throws -> Serialization.Buffer","type":"method"},{"path":"\/documentation\/distributedactors\/serializer\/setserializationcontext(_:)","title":"func setSerializationContext(Serialization.Context)","type":"method"},{"path":"\/documentation\/distributedactors\/serializer\/setuserinfo(key:value:)","title":"func setUserInfo<Value>(key: CodingUserInfoKey, value: Value?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serializer\/trydeserialize(_:)","title":"func tryDeserialize(Serialization.Buffer) throws -> Any","type":"method"},{"path":"\/documentation\/distributedactors\/serializer\/tryserialize(_:)","title":"func trySerialize(Any) throws -> Serialization.Buffer","type":"method"}],"path":"\/documentation\/distributedactors\/serializer\/anyserializer-implementations","title":"AnySerializer Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/serializer","title":"Serializer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/stashbuffer\/init(capacity:)","title":"init(capacity: Int)","type":"init"},{"path":"\/documentation\/distributedactors\/stashbuffer\/init(owner:capacity:)","title":"init(owner: _ActorContext<Message>, capacity: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/stashbuffer\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/distributedactors\/stashbuffer\/isfull","title":"var isFull: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/stashbuffer\/stash(message:)","title":"func stash(message: Message) throws","type":"method"},{"path":"\/documentation\/distributedactors\/stashbuffer\/take()","title":"func take() -> Message?","type":"method"},{"path":"\/documentation\/distributedactors\/stashbuffer\/unstashall(context:behavior:)","title":"func unstashAll(context: _ActorContext<Message>, behavior: _Behavior<Message>) throws -> _Behavior<Message>","type":"method"}],"path":"\/documentation\/distributedactors\/stashbuffer","title":"StashBuffer","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeoutbaseddowningstrategy\/onclusterevent(event:)","title":"func onClusterEvent(event: Cluster.Event) throws -> DowningStrategyDirective","type":"method"},{"path":"\/documentation\/distributedactors\/timeoutbaseddowningstrategy\/ontimeout(_:)","title":"func onTimeout(Cluster.Member) -> DowningStrategyDirective","type":"method"}],"path":"\/documentation\/distributedactors\/timeoutbaseddowningstrategy","title":"TimeoutBasedDowningStrategy","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/init(id:address:)","title":"init(id: AnyObject, address: ActorAddress)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actoraskreplied(reply:error:)","title":"func actorAskReplied(reply: Any?, error: Error?)","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actorasked(message:from:)","title":"func actorAsked(message: Any, from: ActorAddress?)","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actorfailed(failure:)","title":"func actorFailed(failure: _Supervision.Failure)","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actorreceivedend(error:)","title":"func actorReceivedEnd(error: Error?)","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actorreceivedstart(message:from:)","title":"func actorReceivedStart(message: Any, from: ActorAddress?)","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actorspawned()","title":"func actorSpawned()","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actorstopped()","title":"func actorStopped()","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actortold(message:from:)","title":"func actorTold(message: Any, from: ActorAddress?)","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actorunwatchreceived(watchee:watcher:)","title":"func actorUnwatchReceived(watchee: ActorAddress, watcher: ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/actorinstrumentation\/actorwatchreceived(watchee:watcher:)","title":"func actorWatchReceived(watchee: ActorAddress, watcher: ActorAddress)","type":"method"}],"path":"\/documentation\/distributedactors\/actorinstrumentation","title":"ActorInstrumentation","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortag\/key","title":"Key","type":"associatedtype"},{"path":"\/documentation\/distributedactors\/actortag\/value-swift.associatedtype","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortag\/id","title":"var id: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/distributedactors\/actortag\/keytype-3ffgv","title":"var keyType: Key.Type","type":"property"}],"title":"ActorTag Implementations","type":"groupMarker"}],"path":"\/documentation\/distributedactors\/actortag\/keytype-6z1qx","title":"var keyType: Key.Type","type":"property"},{"path":"\/documentation\/distributedactors\/actortag\/value-swift.property","title":"var value: Value","type":"property"}],"path":"\/documentation\/distributedactors\/actortag","title":"ActorTag","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortagkey\/value","title":"Value","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortagkey\/id","title":"static var id: String","type":"property"}],"path":"\/documentation\/distributedactors\/actortagkey","title":"ActorTagKey","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/addressableactor\/asaddressable","title":"var asAddressable: AddressableActorRef","type":"property"}],"path":"\/documentation\/distributedactors\/addressableactor","title":"AddressableActor","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/anyplugin\/start(_:)","title":"func start(ClusterSystem) -> Result<Void, Error>","type":"method"},{"path":"\/documentation\/distributedactors\/anyplugin\/stop(_:)","title":"func stop(ClusterSystem) -> Result<Void, Error>","type":"method"}],"path":"\/documentation\/distributedactors\/anyplugin","title":"AnyPlugin","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/anyserializer\/setserializationcontext(_:)","title":"func setSerializationContext(Serialization.Context)","type":"method"},{"path":"\/documentation\/distributedactors\/anyserializer\/setuserinfo(key:value:)","title":"func setUserInfo<Value>(key: CodingUserInfoKey, value: Value?)","type":"method"},{"path":"\/documentation\/distributedactors\/anyserializer\/trydeserialize(_:)","title":"func tryDeserialize(Serialization.Buffer) throws -> Any","type":"method"},{"path":"\/documentation\/distributedactors\/anyserializer\/tryserialize(_:)","title":"func trySerialize(Any) throws -> Serialization.Buffer","type":"method"}],"path":"\/documentation\/distributedactors\/anyserializer","title":"AnySerializer","type":"protocol"},{"path":"\/documentation\/distributedactors\/any_protobufrepresentable","title":"Any_ProtobufRepresentable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/backoffstrategy\/next()","title":"func next() -> TimeAmount?","type":"method"},{"path":"\/documentation\/distributedactors\/backoffstrategy\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/distributedactors\/backoffstrategy","title":"BackoffStrategy","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersysteminstrumentationprovider\/actorinstrumentation","title":"var actorInstrumentation: ((AnyObject, ActorAddress) -> ActorInstrumentation)?","type":"property"},{"path":"\/documentation\/distributedactors\/clustersysteminstrumentationprovider\/actortransportinstrumentation","title":"var actorTransportInstrumentation: (() -> _InternalActorTransportInstrumentation)?","type":"property"},{"path":"\/documentation\/distributedactors\/clustersysteminstrumentationprovider\/receptionistinstrumentation","title":"var receptionistInstrumentation: (() -> ReceptionistInstrumentation)?","type":"property"}],"path":"\/documentation\/distributedactors\/clustersysteminstrumentationprovider","title":"ClusterSystemInstrumentationProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/codableserializationcontext\/actorserializationcontext","title":"var actorSerializationContext: Serialization.Context?","type":"property"}],"path":"\/documentation\/distributedactors\/codableserializationcontext","title":"CodableSerializationContext","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/distributedactors\/customprettystringconvertible\/prettydescription-1ooew","title":"var prettyDescription: String","type":"property"}],"title":"CustomPrettyStringConvertible Implementations","type":"groupMarker"}],"path":"\/documentation\/distributedactors\/customprettystringconvertible\/prettydescription-7nug6","title":"var prettyDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/distributedactors\/customprettystringconvertible\/prettydescription(depth:)-fz5z","title":"func prettyDescription(depth: Int) -> String","type":"method"}],"title":"CustomPrettyStringConvertible Implementations","type":"groupMarker"}],"path":"\/documentation\/distributedactors\/customprettystringconvertible\/prettydescription(depth:)-2r26y","title":"func prettyDescription(depth: Int) -> String","type":"method"},{"path":"\/documentation\/distributedactors\/customprettystringconvertible\/prettydescription(of:depth:)","title":"func prettyDescription(of: Any, depth: Int) -> String","type":"method"}],"path":"\/documentation\/distributedactors\/customprettystringconvertible","title":"CustomPrettyStringConvertible","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreceptionist\/lookup(_:)","title":"func lookup<Guest>(DistributedReception.Key<Guest>) async -> Set<Guest>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreceptionist\/register(_:with:)","title":"func register<Guest>(Guest, with: DistributedReception.Key<Guest>) async","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreceptionist\/subscribe(to:)","title":"func subscribe<Guest>(to: DistributedReception.Key<Guest>) async -> DistributedReception.GuestListing<Guest>","type":"method"}],"path":"\/documentation\/distributedactors\/distributedreceptionist","title":"DistributedReceptionist","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/downingstrategy\/onclusterevent(event:)","title":"func onClusterEvent(event: Cluster.Event) throws -> DowningStrategyDirective","type":"method"},{"path":"\/documentation\/distributedactors\/downingstrategy\/ontimeout(_:)","title":"func onTimeout(Cluster.Member) -> DowningStrategyDirective","type":"method"}],"path":"\/documentation\/distributedactors\/downingstrategy","title":"DowningStrategy","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/leaderelection\/runelection(context:membership:)","title":"func runElection(context: LeaderElectionContext, membership: Cluster.Membership) -> LeaderElectionResult","type":"method"}],"path":"\/documentation\/distributedactors\/leaderelection","title":"LeaderElection","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/lifecyclewatch\/iswatching(_:)","title":"func isWatching<Watchee>(Watchee) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/lifecyclewatch\/unwatch(_:file:line:)","title":"func unwatch<Watchee>(Watchee, file: String, line: UInt) -> Watchee","type":"method"},{"path":"\/documentation\/distributedactors\/lifecyclewatch\/watchtermination(of:whenterminated:file:line:)","title":"func watchTermination<Watchee>(of: Watchee, whenTerminated: (ID) -> Void, file: String, line: UInt) -> Watchee","type":"method"}],"path":"\/documentation\/distributedactors\/lifecyclewatch","title":"LifecycleWatch","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableactormessage\/init(context:from:using:)","title":"init(context: Serialization.Context, from: inout ByteBuffer, using: Serialization.Manifest) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableactormessage\/serialize(context:to:)","title":"func serialize(context: Serialization.Context, to: inout ByteBuffer) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableactormessage\/init(from:)","title":"init(from: Swift.Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/nontransportableactormessage\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableactormessage\/encode(to:)","title":"func encode(to: Swift.Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/nontransportableactormessage\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/nontransportableactormessage","title":"NonTransportableActorMessage","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/peerselection\/peer","title":"Peer","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/peerselection\/onmembershipevent(event:)","title":"func onMembershipEvent(event: Cluster.Event)","type":"method"},{"path":"\/documentation\/distributedactors\/peerselection\/select()","title":"func select() -> OrderedSet<Peer>","type":"method"}],"path":"\/documentation\/distributedactors\/peerselection","title":"PeerSelection","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/plugin\/key-swift.property","title":"var key: Key","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/plugin\/key-swift.typealias","title":"Plugin.Key","type":"typealias"}],"path":"\/documentation\/distributedactors\/plugin","title":"Plugin","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionistinstrumentation\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionistinstrumentation\/actorregistered(key:address:)","title":"func actorRegistered(key: AnyReceptionKey, address: ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/receptionistinstrumentation\/actorremoved(key:address:)","title":"func actorRemoved(key: AnyReceptionKey, address: ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/receptionistinstrumentation\/actorsubscribed(key:address:)","title":"func actorSubscribed(key: AnyReceptionKey, address: ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/receptionistinstrumentation\/listingpublished(key:subscribers:registrations:)","title":"func listingPublished(key: AnyReceptionKey, subscribers: Int, registrations: Int)","type":"method"}],"path":"\/documentation\/distributedactors\/receptionistinstrumentation","title":"ReceptionistInstrumentation","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/distributedactors\/any_protobufrepresentable\/defaultserializerid","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"title":"Any_ProtobufRepresentable Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/distributedactors\/serializationrepresentable\/defaultserializerid-3yuzl","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"title":"SerializationRepresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/distributedactors\/serializationrepresentable\/defaultserializerid-71vbq","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/serializationrepresentable","title":"SerializationRepresentable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/all","title":"static let all: ActiveMetricsOptionSet","type":"property"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/deserialization","title":"static let deserialization: ActiveMetricsOptionSet","type":"property"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/mailbox","title":"static let mailbox: ActiveMetricsOptionSet","type":"property"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/messageprocessing","title":"static let messageProcessing: ActiveMetricsOptionSet","type":"property"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/serialization","title":"static let serialization: ActiveMetricsOptionSet","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/activemetricsoptionset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/distributedactors\/activemetricsoptionset\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/distributedactors\/activemetricsoptionset\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/distributedactors\/activemetricsoptionset\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/activemetricsoptionset","title":"ActiveMetricsOptionSet","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/init(local:path:incarnation:)","title":"init(local: UniqueNode, path: ActorPath, incarnation: ActorIncarnation)","type":"init"},{"path":"\/documentation\/distributedactors\/actoraddress\/init(remote:path:incarnation:)","title":"init(remote: UniqueNode, path: ActorPath, incarnation: ActorIncarnation)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/detaileddescription","title":"var detailedDescription: String","type":"property"},{"path":"\/documentation\/distributedactors\/actoraddress\/fulldescription","title":"var fullDescription: String","type":"property"},{"path":"\/documentation\/distributedactors\/actoraddress\/incarnation","title":"let incarnation: ActorIncarnation","type":"property"},{"path":"\/documentation\/distributedactors\/actoraddress\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/distributedactors\/actoraddress\/path","title":"var path: ActorPath","type":"property"},{"path":"\/documentation\/distributedactors\/actoraddress\/tags","title":"var tags: ActorTags","type":"property"},{"path":"\/documentation\/distributedactors\/actoraddress\/uniquenode","title":"var uniqueNode: UniqueNode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/'...(_:)-1jgyi","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/'...(_:)-awhz","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/actoraddress\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/'...(_:)-1jgyi","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/'...(_:)-awhz","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/actoraddress\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/defaultserializerid-4ok0q","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/actoraddress\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/_(_:_:)-57tzi","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/_(_:_:)-64n6b","title":"static func < (ActorAddress, ActorAddress) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/_=(_:_:)-13b5t","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/_=(_:_:)-4llrl","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/actoraddress\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/actoraddress\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/actoraddress\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/actoraddress\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actoraddress\/==(_:_:)","title":"static func == (ActorAddress, ActorAddress) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/actoraddress\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/actoraddress\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/defaultserializerid-4e7iq","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/actoraddress\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/segments","title":"var segments: [ActorPathSegment]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/appending(segment:)","title":"func appending(segment: ActorPathSegment) -> ActorAddress","type":"method"}],"path":"\/documentation\/distributedactors\/actoraddress\/_pathrelationships-implementations","title":"_PathRelationships Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/init(fromproto:context:)","title":"init(fromProto: _ProtoActorAddress, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> _ProtoActorAddress","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actoraddress\/protobufrepresentation","title":"ActorAddress.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/actoraddress\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/actoraddress","title":"ActorAddress","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/init(_:)-24x3v","title":"init(Int)","type":"init"},{"path":"\/documentation\/distributedactors\/actorincarnation\/init(_:)-60ssg","title":"init(UInt32)","type":"init"},{"path":"\/documentation\/distributedactors\/actorincarnation\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/wellknown","title":"static let wellKnown: ActorIncarnation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/random()","title":"static func random() -> ActorIncarnation","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'...(_:)-2lndc","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'...(_:)-609bt","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/actorincarnation\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'...(_:)-2lndc","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'...(_:)-609bt","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/actorincarnation\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/_(_:_:)-2ud4z","title":"static func < (ActorIncarnation, ActorIncarnation) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/_(_:_:)-9fuvw","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/_=(_:_:)-3hzf4","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actorincarnation\/_=(_:_:)-8qwo8","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/actorincarnation\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/actorincarnation\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/actorincarnation\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorincarnation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/actorincarnation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/actorincarnation","title":"ActorIncarnation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actornaming\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actornaming\/anonymous","title":"static var anonymous: ActorNaming","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actornaming\/prefixed(with:)","title":"static func prefixed(with: String) -> ActorNaming","type":"method"},{"path":"\/documentation\/distributedactors\/actornaming\/unique(_:)","title":"static func unique(String) -> ActorNaming","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actornaming\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/actornaming\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actornaming\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/distributedactors\/actornaming\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actornaming\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/actornaming\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/actornaming","title":"ActorNaming","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/init(_:)","title":"init([ActorPathSegment]) throws","type":"init"},{"path":"\/documentation\/distributedactors\/actorpath\/init(root:)","title":"init(root: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/distributedactors\/actorpath\/segments","title":"var segments: [ActorPathSegment]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/append(_:)","title":"func append(String) throws","type":"method"},{"path":"\/documentation\/distributedactors\/actorpath\/appending(_:)","title":"func appending(String) throws -> ActorPath","type":"method"},{"path":"\/documentation\/distributedactors\/actorpath\/appending(segment:)","title":"func appending(segment: ActorPathSegment) -> ActorPath","type":"method"},{"path":"\/documentation\/distributedactors\/actorpath\/appending(segments:)","title":"func appending(segments: [ActorPathSegment]) -> ActorPath","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/'...(_:)-7a6ak","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/'...(_:)-lqfs","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/actorpath\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/'...(_:)-7a6ak","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/'...(_:)-lqfs","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/actorpath\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/_(_:_:)-8t2kg","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/_(_:_:)-ldsc","title":"static func < (ActorPath, ActorPath) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/_=(_:_:)-5bey9","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/actorpath\/_=(_:_:)-8rtmi","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/actorpath\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/actorpath\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/actorpath\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/actorpath\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpath\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/actorpath\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/actorpath","title":"ActorPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpathsegment\/init(_:)","title":"init(String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpathsegment\/value","title":"let value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpathsegment\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/actorpathsegment\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpathsegment\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/actorpathsegment\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpathsegment\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/actorpathsegment\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpathsegment\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/actorpathsegment\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpathsegment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/actorpathsegment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/actorpathsegment","title":"ActorPathSegment","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortagsettings\/tagoninit-swift.struct","title":"ActorTagSettings.TagOnInit","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortagsettings\/tagoninit-swift.property","title":"var tagOnInit: [TagOnInit]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortagsettings\/default","title":"static var `default`: ActorTagSettings","type":"property"}],"path":"\/documentation\/distributedactors\/actortagsettings","title":"ActorTagSettings","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortags\/actorpathtag\/value","title":"let value: Key.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortags\/actorpathtag\/key","title":"ActorTags.ActorPathTag.Key","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortags\/actorpathtag\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/distributedactors\/actortags\/actorpathtag\/keytype","title":"var keyType: Key.Type","type":"property"}],"path":"\/documentation\/distributedactors\/actortags\/actorpathtag\/actortag-implementations","title":"ActorTag Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/actortags\/actorpathtag","title":"ActorTags.ActorPathTag","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortags\/actorpathtagkey\/value","title":"ActorTags.ActorPathTagKey.Value","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortags\/actorpathtagkey\/id","title":"static let id: String","type":"property"}],"path":"\/documentation\/distributedactors\/actortags\/actorpathtagkey","title":"ActorTags.ActorPathTagKey","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actortags\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/distributedactors\/actortags\/isempty","title":"var isEmpty: Bool","type":"property"}],"path":"\/documentation\/distributedactors\/actortags","title":"ActorTags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/addressableactorref\/init(_:)","title":"init<M>(_ActorRef<M>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/addressableactorref\/address","title":"var address: ActorAddress","type":"property"},{"path":"\/documentation\/distributedactors\/addressableactorref\/asaddressable","title":"var asAddressable: AddressableActorRef","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/addressableactorref\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/addressableactorref\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/addressableactorref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/addressableactorref\/==(_:_:)","title":"static func == (AddressableActorRef, AddressableActorRef) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/addressableactorref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/addressableactorref\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/addressableactorref\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/addressableactorref","title":"AddressableActorRef","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/anyreceptionkey\/==(_:_:)","title":"static func == (AnyReceptionKey, AnyReceptionKey) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/anyreceptionkey\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/anyreceptionkey\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/anyreceptionkey\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/distributedactors\/anyreceptionkey\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/anyreceptionkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/anyreceptionkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/anyreceptionkey","title":"AnyReceptionKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/besteffortstringerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/besteffortstringerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/besteffortstringerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/besteffortstringerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/besteffortstringerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/besteffortstringerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/besteffortstringerror","title":"BestEffortStringError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustercontrol\/events","title":"let events: EventStream<Cluster.Event>","type":"property"},{"path":"\/documentation\/distributedactors\/clustercontrol\/membershipsnapshot","title":"var membershipSnapshot: Cluster.Membership","type":"property"},{"path":"\/documentation\/distributedactors\/clustercontrol\/settings","title":"let settings: ClusterSystemSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustercontrol\/uniquenode","title":"var uniqueNode: UniqueNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustercontrol\/down(member:)","title":"func down(member: Cluster.Member)","type":"method"},{"path":"\/documentation\/distributedactors\/clustercontrol\/down(node:)","title":"func down(node: Node)","type":"method"},{"path":"\/documentation\/distributedactors\/clustercontrol\/join(host:port:)","title":"func join(host: String, port: Int)","type":"method"},{"path":"\/documentation\/distributedactors\/clustercontrol\/join(node:)-26kp1","title":"func join(node: UniqueNode)","type":"method"},{"path":"\/documentation\/distributedactors\/clustercontrol\/join(node:)-pb2g","title":"func join(node: Node)","type":"method"},{"path":"\/documentation\/distributedactors\/clustercontrol\/leave()","title":"func leave()","type":"method"}],"path":"\/documentation\/distributedactors\/clustercontrol","title":"ClusterControl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clusterinvocationdecoder\/init(system:message:)","title":"init(system: ClusterSystem, message: InvocationMessage)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clusterinvocationdecoder\/decodeerrortype()","title":"func decodeErrorType() throws -> Any.Type?","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationdecoder\/decodegenericsubstitutions()","title":"func decodeGenericSubstitutions() throws -> [Any.Type]","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationdecoder\/decodenextargument()","title":"func decodeNextArgument<Argument>() throws -> Argument","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationdecoder\/decodereturntype()","title":"func decodeReturnType() throws -> Any.Type?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clusterinvocationdecoder\/serializationrequirement","title":"ClusterInvocationDecoder.SerializationRequirement","type":"typealias"}],"path":"\/documentation\/distributedactors\/clusterinvocationdecoder","title":"ClusterInvocationDecoder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clusterinvocationencoder\/donerecording()","title":"func doneRecording() throws","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationencoder\/recordargument(_:)","title":"func recordArgument<Value>(RemoteCallArgument<Value>) throws","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationencoder\/recorderrortype(_:)","title":"func recordErrorType<E>(E.Type) throws","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationencoder\/recordgenericsubstitution(_:)","title":"func recordGenericSubstitution<T>(T.Type) throws","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationencoder\/recordreturntype(_:)","title":"func recordReturnType<Success>(Success.Type) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clusterinvocationencoder\/serializationrequirement","title":"ClusterInvocationEncoder.SerializationRequirement","type":"typealias"}],"path":"\/documentation\/distributedactors\/clusterinvocationencoder","title":"ClusterInvocationEncoder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clusterinvocationresulthandler\/onreturn(value:)","title":"func onReturn<Success>(value: Success) async throws","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationresulthandler\/onreturnvoid()","title":"func onReturnVoid() async throws","type":"method"},{"path":"\/documentation\/distributedactors\/clusterinvocationresulthandler\/onthrow(error:)","title":"func onThrow<Err>(error: Err) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clusterinvocationresulthandler\/serializationrequirement","title":"ClusterInvocationResultHandler.SerializationRequirement","type":"typealias"}],"path":"\/documentation\/distributedactors\/clusterinvocationresulthandler","title":"ClusterInvocationResultHandler","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/actorsettings\/maxbehaviornestingdepth","title":"var maxBehaviorNestingDepth: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/actorsettings\/default","title":"static var `default`: ActorSettings","type":"property"}],"path":"\/documentation\/distributedactors\/clustersystemsettings\/actorsettings","title":"ClusterSystemSettings.ActorSettings","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/instrumentationsettings\/makeactorinstrumentation","title":"var makeActorInstrumentation: (AnyObject, ActorAddress) -> ActorInstrumentation","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/instrumentationsettings\/makeinternalactortransportinstrumentation","title":"var makeInternalActorTransportInstrumentation: () -> _InternalActorTransportInstrumentation","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/instrumentationsettings\/makereceptionistinstrumentation","title":"var makeReceptionistInstrumentation: () -> ReceptionistInstrumentation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/instrumentationsettings\/configure(with:)","title":"func configure(with: ClusterSystemInstrumentationProvider)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/instrumentationsettings\/default","title":"static var `default`: InstrumentationSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/instrumentationsettings\/none","title":"static var none: InstrumentationSettings","type":"property"}],"path":"\/documentation\/distributedactors\/clustersystemsettings\/instrumentationsettings","title":"ClusterSystemSettings.InstrumentationSettings","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/+=(_:_:)","title":"static func += <P>(inout ClusterSystemSettings, P)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/init(name:host:port:tls:)","title":"init(name: String, host: String, port: Int, tls: TLSConfiguration?)","type":"init"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/init(node:tls:)","title":"init(node: Node, tls: TLSConfiguration?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/actor","title":"var actor: ActorSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/associationtombstonecleanupinterval","title":"var associationTombstoneCleanupInterval: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/associationtombstonettl","title":"var associationTombstoneTTL: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/autoleaderelection","title":"var autoLeaderElection: LeadershipSelectionSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/bindhost","title":"var bindHost: String","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/bindport","title":"var bindPort: Int","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/bindtimeout","title":"var bindTimeout: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/connecttimeout","title":"var connectTimeout: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/defaultremotecalltimeout","title":"var defaultRemoteCallTimeout: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/discovery","title":"var discovery: ServiceDiscoverySettings?","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/downingstrategy","title":"var downingStrategy: DowningStrategySettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup?","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/handshakereconnectbackoff","title":"var handshakeReconnectBackoff: BackoffStrategy","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/installswiftbacktrace","title":"var installSwiftBacktrace: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/instrumentation","title":"var instrumentation: InstrumentationSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/logmembershipchanges","title":"var logMembershipChanges: Logger.Level?","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/logging","title":"var logging: LoggingSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/membershipgossipacknowledgementtimeout","title":"var membershipGossipAcknowledgementTimeout: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/membershipgossipinterval","title":"var membershipGossipInterval: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/membershipgossipintervalrandomfactor","title":"var membershipGossipIntervalRandomFactor: Double","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/metrics","title":"var metrics: MetricsSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/nid","title":"var nid: UniqueNodeID","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/node","title":"var node: Node","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/ondownaction","title":"var onDownAction: OnDownActionStrategySettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/plugins","title":"var plugins: PluginsSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/protocolversion","title":"var protocolVersion: DistributedActors.Version","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/receptionist","title":"var receptionist: ReceptionistSettings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/serialization","title":"var serialization: Serialization.Settings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/swim","title":"var swim: SWIM.Settings","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/threadpoolsize","title":"var threadPoolSize: Int","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/tls","title":"var tls: TLSConfiguration?","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/tlspassphrasecallback","title":"var tlsPassphraseCallback: NIOSSLPassphraseCallback<[UInt8]>?","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/traceloglevel","title":"var traceLogLevel: Logger.Level?","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/transports","title":"var transports: [_InternalActorTransport]","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/unbindtimeout","title":"var unbindTimeout: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/uniquebindnode","title":"var uniqueBindNode: UniqueNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/makedefaulteventloopgroup()","title":"func makeDefaultEventLoopGroup() -> EventLoopGroup","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/protocolname","title":"ClusterSystemSettings.ProtocolName","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/default-swift.type.property","title":"static var `default`: ClusterSystemSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/default-swift.enum\/bindhost","title":"static let bindHost: String","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/default-swift.enum\/bindport","title":"static let bindPort: Int","type":"property"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/default-swift.enum\/name","title":"static let name: String","type":"property"}],"path":"\/documentation\/distributedactors\/clustersystemsettings\/default-swift.enum","title":"ClusterSystemSettings.Default","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/leadershipselectionsettings\/lowestreachable(minnumberofmembers:)","title":"case lowestReachable(minNumberOfMembers: Int)","type":"case"},{"path":"\/documentation\/distributedactors\/clustersystemsettings\/leadershipselectionsettings\/none","title":"case none","type":"case"}],"path":"\/documentation\/distributedactors\/clustersystemsettings\/leadershipselectionsettings","title":"ClusterSystemSettings.LeadershipSelectionSettings","type":"enum"}],"path":"\/documentation\/distributedactors\/clustersystemsettings","title":"ClusterSystemSettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/constantbackoffstrategy\/init(timeamount:)","title":"init(timeAmount: TimeAmount)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/constantbackoffstrategy\/next()","title":"func next() -> TimeAmount?","type":"method"},{"path":"\/documentation\/distributedactors\/constantbackoffstrategy\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/distributedactors\/constantbackoffstrategy","title":"ConstantBackoffStrategy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadletter\/init(_:recipient:sentatfile:sentatline:)","title":"init(Any, recipient: ActorAddress?, sentAtFile: String?, sentAtLine: UInt?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadletter\/init(from:)","title":"init(from: Swift.Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/deadletter\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadletter\/encode(to:)","title":"func encode(to: Swift.Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/deadletter\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadletter\/init(context:from:using:)","title":"init(context: Serialization.Context, from: inout ByteBuffer, using: Serialization.Manifest) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadletter\/serialize(context:to:)","title":"func serialize(context: Serialization.Context, to: inout ByteBuffer) throws","type":"method"}],"path":"\/documentation\/distributedactors\/deadletter\/nontransportableactormessage-implementations","title":"NonTransportableActorMessage Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/deadletter","title":"DeadLetter","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/+(_:_:)","title":"static func + (Deadline, TimeAmount) -> Deadline","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/-(_:_:)-43ryc","title":"static func - (Deadline, TimeAmount) -> Deadline","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/-(_:_:)-i6nc","title":"static func - (Deadline, Deadline) -> TimeAmount","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/init(_:)","title":"init(Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/timeleft","title":"var timeLeft: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/deadline\/uptimenanoseconds","title":"let uptimeNanoseconds: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/hastimeleft()","title":"func hasTimeLeft() -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/deadline\/hastimeleft(until:)","title":"func hasTimeLeft(until: Deadline) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/deadline\/isbefore(_:)","title":"func isBefore(Deadline) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/deadline\/isoverdue()","title":"func isOverdue() -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/value","title":"Deadline.Value","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/distantfuture","title":"static let distantFuture: Deadline","type":"property"},{"path":"\/documentation\/distributedactors\/deadline\/distantpast","title":"static let distantPast: Deadline","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/fromnow(_:)","title":"static func fromNow(TimeAmount) -> Deadline","type":"method"},{"path":"\/documentation\/distributedactors\/deadline\/now()","title":"static func now() -> Deadline","type":"method"},{"path":"\/documentation\/distributedactors\/deadline\/uptimenanoseconds(_:)","title":"static func uptimeNanoseconds(Value) -> Deadline","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/'...(_:)-3mn0d","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/'...(_:)-5xum5","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/deadline\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/'...(_:)-3mn0d","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/'...(_:)-5xum5","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/deadline\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/_(_:_:)-187rz","title":"static func < (Deadline, Deadline) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/_(_:_:)-453ot","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/_(_:_:)-55cqp","title":"static func > (Deadline, Deadline) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/_=(_:_:)-7ux0l","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/deadline\/_=(_:_:)-82mjv","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/deadline\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/deadline\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deadline\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/deadline\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/deadline","title":"Deadline","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/errorenvelope\/init(_:)","title":"init(Error)","type":"init"},{"path":"\/documentation\/distributedactors\/errorenvelope\/init(description:)","title":"init(description: String)","type":"init"},{"path":"\/documentation\/distributedactors\/errorenvelope\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/errorenvelope\/error","title":"var error: Error","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/errorenvelope\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/errorenvelope\/codableerror","title":"ErrorEnvelope.CodableError","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/errorenvelope\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/errorenvelope\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/errorenvelope","title":"ErrorEnvelope","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/eventstream\/asynciterator\/next()","title":"func next() async -> Event?","type":"method"}],"path":"\/documentation\/distributedactors\/eventstream\/asynciterator","title":"EventStream.AsyncIterator","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/eventstream\/init(_:name:of:)","title":"init(ClusterSystem, name: String, of: Event.Type) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/eventstream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/publish(_:file:line:)","title":"func publish(Event, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/subscribe(_:file:line:)","title":"func subscribe(_ActorRef<Event>, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/unsubscribe(_:file:line:)","title":"func unsubscribe(_ActorRef<Event>, file: String, line: UInt)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/eventstream\/element","title":"EventStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/eventstream\/characters","title":"var characters: AsyncCharacterSequence<Self>","type":"property"},{"path":"\/documentation\/distributedactors\/eventstream\/lines","title":"var lines: AsyncLineSequence<Self>","type":"property"},{"path":"\/documentation\/distributedactors\/eventstream\/unicodescalars","title":"var unicodeScalars: AsyncUnicodeScalarSequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/eventstream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/compactmap(_:)-9wold","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/compactmap(_:)-gd6p","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/flatmap(_:)-27b3q","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/flatmap(_:)-2w3xf","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/map(_:)-7n2sd","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/map(_:)-8lhbl","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/distributedactors\/eventstream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/distributedactors\/eventstream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/eventstream","title":"EventStream","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/next()","title":"func next() -> TimeAmount?","type":"method"},{"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/reset()","title":"func reset()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/defaults\/capinterval","title":"static let capInterval: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/defaults\/initialinterval","title":"static let initialInterval: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/defaults\/maxattempts","title":"static let maxAttempts: Int?","type":"property"},{"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/defaults\/multiplier","title":"static let multiplier: Double","type":"property"},{"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/defaults\/randomfactor","title":"static let randomFactor: Double","type":"property"}],"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/defaults","title":"ExponentialBackoffStrategy.Defaults","type":"enum"}],"path":"\/documentation\/distributedactors\/exponentialbackoffstrategy","title":"ExponentialBackoffStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/inboundsystemmessageredeliverysettings\/default","title":"static let `default`: InboundSystemMessageRedeliverySettings","type":"property"}],"path":"\/documentation\/distributedactors\/inboundsystemmessageredeliverysettings","title":"InboundSystemMessageRedeliverySettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/invocationmessage\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/invocationmessage\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/invocationmessage","title":"InvocationMessage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/lamportclock\/init()","title":"init()","type":"init"},{"path":"\/documentation\/distributedactors\/lamportclock\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/distributedactors\/lamportclock\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/lamportclock\/time","title":"var time: LamportTime","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/lamportclock\/increment()","title":"func increment()","type":"method"},{"path":"\/documentation\/distributedactors\/lamportclock\/witness(_:)","title":"func witness(LamportClock)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/lamportclock\/integerliteraltype","title":"LamportClock.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/distributedactors\/lamportclock","title":"LamportClock","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/leaderelectioncontext\/log","title":"var log: Logger","type":"property"},{"path":"\/documentation\/distributedactors\/leaderelectioncontext\/loop","title":"let loop: EventLoop","type":"property"}],"path":"\/documentation\/distributedactors\/leaderelectioncontext","title":"LeaderElectionContext","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/leaderelectionresult\/withtimeout(after:)","title":"func withTimeout(after: TimeAmount) -> LeaderElectionResult","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/leaderelectionresult\/value","title":"LeaderElectionResult.Value","type":"typealias"}],"path":"\/documentation\/distributedactors\/leaderelectionresult","title":"LeaderElectionResult","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/leadership\/lowestreachablemember\/init(minimumnrofmembers:loseleadershipifbelowminnrofmembers:)","title":"init(minimumNrOfMembers: Int, loseLeadershipIfBelowMinNrOfMembers: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/leadership\/lowestreachablemember\/runelection(context:membership:)","title":"func runElection(context: LeaderElectionContext, membership: Cluster.Membership) -> LeaderElectionResult","type":"method"}],"path":"\/documentation\/distributedactors\/leadership\/lowestreachablemember","title":"Leadership.LowestReachableMember","type":"struct"}],"path":"\/documentation\/distributedactors\/leadership","title":"Leadership","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/leftoverbyteserror\/leftoverbytes","title":"let leftOverBytes: ByteBuffer","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/leftoverbyteserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/leftoverbyteserror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/leftoverbyteserror","title":"LeftOverBytesError","type":"struct"},{"path":"\/documentation\/distributedactors\/logmessage","title":"LogMessage","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/loggingsettings\/baselogger","title":"var baseLogger: Logger","type":"property"},{"path":"\/documentation\/distributedactors\/loggingsettings\/loglevel","title":"var logLevel: Logger.Level","type":"property"},{"path":"\/documentation\/distributedactors\/loggingsettings\/usebuiltinformatter","title":"var useBuiltInFormatter: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/loggingsettings\/verbosespawning","title":"var verboseSpawning: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/loggingsettings\/verbosetimers","title":"var verboseTimers: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/loggingsettings\/default","title":"static var `default`: LoggingSettings","type":"property"}],"path":"\/documentation\/distributedactors\/loggingsettings","title":"LoggingSettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/metricsprops\/init(group:active:)","title":"init(group: String, active: ActiveMetricsOptionSet)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/metricsprops\/active","title":"var active: ActiveMetricsOptionSet","type":"property"},{"path":"\/documentation\/distributedactors\/metricsprops\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/metricsprops\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/metricsprops\/group","title":"var group: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/metricsprops\/disabled","title":"static var disabled: MetricsProps","type":"property"}],"path":"\/documentation\/distributedactors\/metricsprops","title":"MetricsProps","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/metricssettings\/clusterswimmetricsprefix","title":"var clusterSWIMMetricsPrefix: String?","type":"property"},{"path":"\/documentation\/distributedactors\/metricssettings\/segmentseparator","title":"var segmentSeparator: String","type":"property"},{"path":"\/documentation\/distributedactors\/metricssettings\/systemmetricsprefix","title":"var systemMetricsPrefix: String?","type":"property"},{"path":"\/documentation\/distributedactors\/metricssettings\/systemname","title":"var systemName: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/metricssettings\/default(rootname:)","title":"static func `default`(rootName: String?) -> MetricsSettings","type":"method"}],"path":"\/documentation\/distributedactors\/metricssettings","title":"MetricsSettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/init(host:port:)","title":"init(host: String, port: Int)","type":"init"},{"path":"\/documentation\/distributedactors\/node\/init(protocol:systemname:host:port:)","title":"init(protocol: String, systemName: String, host: String, port: Int)","type":"init"},{"path":"\/documentation\/distributedactors\/node\/init(systemname:host:port:)","title":"init(systemName: String, host: String, port: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/host","title":"var host: String","type":"property"},{"path":"\/documentation\/distributedactors\/node\/port","title":"var port: Int","type":"property"},{"path":"\/documentation\/distributedactors\/node\/protocol","title":"var `protocol`: String","type":"property"},{"path":"\/documentation\/distributedactors\/node\/systemname","title":"var systemName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/'...(_:)-156c3","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/node\/'...(_:)-6kib","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/node\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/node\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/node\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/node\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/'...(_:)-156c3","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/node\/'...(_:)-6kib","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/node\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/node\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/node\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/node\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/_(_:_:)-5hln0","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/node\/_(_:_:)-ktlw","title":"static func < (Node, Node) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/node\/_=(_:_:)-8arz3","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/node\/_=(_:_:)-9nvww","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/node\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/node\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/node\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/node\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/node\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/node\/==(_:_:)","title":"static func == (Node, Node) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/node\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/node\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/node\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/node","title":"Node","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableanyerror\/init(_:)","title":"init<Failure>(Failure)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableanyerror\/failure","title":"let failure: Error","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableanyerror\/init(from:)","title":"init(from: Swift.Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/nontransportableanyerror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableanyerror\/encode(to:)","title":"func encode(to: Swift.Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/nontransportableanyerror\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableanyerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/nontransportableanyerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableanyerror\/init(context:from:using:)","title":"init(context: Serialization.Context, from: inout ByteBuffer, using: Serialization.Manifest) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nontransportableanyerror\/serialize(context:to:)","title":"func serialize(context: Serialization.Context, to: inout ByteBuffer) throws","type":"method"}],"path":"\/documentation\/distributedactors\/nontransportableanyerror\/nontransportableactormessage-implementations","title":"NonTransportableActorMessage Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/nontransportableanyerror","title":"NonTransportableAnyError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/init(id:address:)","title":"init(id: AnyObject, address: ActorAddress)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actormailboxruncompleted(processed:)","title":"func actorMailboxRunCompleted(processed: Int)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actormailboxrunstarted(mailboxcount:)","title":"func actorMailboxRunStarted(mailboxCount: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorreceivedeventpattern","title":"static let actorReceivedEventPattern: StaticString","type":"property"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorreceivedwatchespattern","title":"static let actorReceivedWatchesPattern: StaticString","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actoraskreplied(reply:error:)","title":"func actorAskReplied(reply: Any?, error: Error?)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorasked(message:from:)","title":"func actorAsked(message: Any, from: ActorAddress?)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorfailed(failure:)","title":"func actorFailed(failure: _Supervision.Failure)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorreceivedend(error:)","title":"func actorReceivedEnd(error: Error?)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorreceivedstart(message:from:)","title":"func actorReceivedStart(message: Any, from: ActorAddress?)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorspawned()","title":"func actorSpawned()","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorstopped()","title":"func actorStopped()","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actortold(message:from:)","title":"func actorTold(message: Any, from: ActorAddress?)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorunwatchreceived(watchee:watcher:)","title":"func actorUnwatchReceived(watchee: ActorAddress, watcher: ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorwatchreceived(watchee:watcher:)","title":"func actorWatchReceived(watchee: ActorAddress, watcher: ActorAddress)","type":"method"}],"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation\/actorinstrumentation-implementations","title":"ActorInstrumentation Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/ossignpostactorinstrumentation","title":"OSSignpostActorInstrumentation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpostinstrumentationprovider\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpostinstrumentationprovider\/actorinstrumentation","title":"var actorInstrumentation: ((AnyObject, ActorAddress) -> ActorInstrumentation)?","type":"property"},{"path":"\/documentation\/distributedactors\/ossignpostinstrumentationprovider\/actortransportinstrumentation","title":"var actorTransportInstrumentation: (() -> _InternalActorTransportInstrumentation)?","type":"property"},{"path":"\/documentation\/distributedactors\/ossignpostinstrumentationprovider\/receptionistinstrumentation","title":"var receptionistInstrumentation: (() -> ReceptionistInstrumentation)?","type":"property"}],"path":"\/documentation\/distributedactors\/ossignpostinstrumentationprovider","title":"OSSignpostInstrumentationProvider","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpostreceptionistinstrumentation\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpostreceptionistinstrumentation\/actorregistered(key:address:)","title":"func actorRegistered(key: AnyReceptionKey, address: ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostreceptionistinstrumentation\/actorremoved(key:address:)","title":"func actorRemoved(key: AnyReceptionKey, address: ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostreceptionistinstrumentation\/actorsubscribed(key:address:)","title":"func actorSubscribed(key: AnyReceptionKey, address: ActorAddress)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpostreceptionistinstrumentation\/listingpublished(key:subscribers:registrations:)","title":"func listingPublished(key: AnyReceptionKey, subscribers: Int, registrations: Int)","type":"method"}],"path":"\/documentation\/distributedactors\/ossignpostreceptionistinstrumentation\/receptionistinstrumentation-implementations","title":"ReceptionistInstrumentation Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/ossignpostreceptionistinstrumentation","title":"OSSignpostReceptionistInstrumentation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpost_internalactortransportinstrumentation\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ossignpost_internalactortransportinstrumentation\/remoteactormessagedeserializeend(id:message:)","title":"func remoteActorMessageDeserializeEnd(id: AnyObject, message: Any?)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpost_internalactortransportinstrumentation\/remoteactormessagedeserializestart(id:recipient:bytes:)","title":"func remoteActorMessageDeserializeStart(id: AnyObject, recipient: ActorPath, bytes: Int)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpost_internalactortransportinstrumentation\/remoteactormessageserializeend(id:bytes:)","title":"func remoteActorMessageSerializeEnd(id: AnyObject, bytes: Int)","type":"method"},{"path":"\/documentation\/distributedactors\/ossignpost_internalactortransportinstrumentation\/remoteactormessageserializestart(id:recipient:message:)","title":"func remoteActorMessageSerializeStart(id: AnyObject, recipient: ActorPath, message: Any)","type":"method"}],"path":"\/documentation\/distributedactors\/ossignpost_internalactortransportinstrumentation\/_internalactortransportinstrumentation-implementations","title":"_InternalActorTransportInstrumentation Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/ossignpost_internalactortransportinstrumentation","title":"OSSignpost_InternalActorTransportInstrumentation","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/outboundsystemmessageredeliverysettings\/default","title":"static let `default`: OutboundSystemMessageRedeliverySettings","type":"property"}],"path":"\/documentation\/distributedactors\/outboundsystemmessageredeliverysettings","title":"OutboundSystemMessageRedeliverySettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/pluginkey\/init(plugin:)","title":"init(plugin: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/pluginkey\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/pluginkey\/plugin","title":"let plugin: String","type":"property"},{"path":"\/documentation\/distributedactors\/pluginkey\/sub","title":"let sub: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/pluginkey\/makesub(_:)","title":"func makeSub(String) -> PluginKey","type":"method"}],"path":"\/documentation\/distributedactors\/pluginkey","title":"PluginKey","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/pluginssettings\/+=(_:_:)","title":"static func += <P>(inout PluginsSettings, P)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/pluginssettings\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/pluginssettings\/add(_:)","title":"func add<P>(P)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/pluginssettings\/subscript(_:)","title":"subscript<P>(PluginKey<P>) -> P?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/pluginssettings\/default","title":"static var `default`: PluginsSettings","type":"property"}],"path":"\/documentation\/distributedactors\/pluginssettings","title":"PluginsSettings","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionist\/lookup\/init(key:replyto:)","title":"init(key: Reception.Key<Guest>, replyTo: _ActorRef<Reception.Listing<Guest>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionist\/lookup\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/receptionist\/lookup\/key","title":"let key: Reception.Key<Guest>","type":"property"},{"path":"\/documentation\/distributedactors\/receptionist\/lookup\/subscriber","title":"let subscriber: _ActorRef<Reception.Listing<Guest>>","type":"property"}],"path":"\/documentation\/distributedactors\/receptionist\/lookup","title":"Receptionist.Lookup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionist\/register\/init(_:key:replyto:)","title":"init(Guest, key: Reception.Key<Guest>, replyTo: _ActorRef<Reception.Registered<Guest>>?)","type":"init"},{"path":"\/documentation\/distributedactors\/receptionist\/register\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionist\/register\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/receptionist\/register\/guest","title":"let guest: Guest","type":"property"},{"path":"\/documentation\/distributedactors\/receptionist\/register\/key","title":"let key: Reception.Key<Guest>","type":"property"},{"path":"\/documentation\/distributedactors\/receptionist\/register\/replyto","title":"let replyTo: _ActorRef<Reception.Registered<Guest>>?","type":"property"}],"path":"\/documentation\/distributedactors\/receptionist\/register","title":"Receptionist.Register","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionist\/subscribe\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/distributedactors\/receptionist\/subscribe\/init(key:subscriber:)","title":"init(key: Reception.Key<Guest>, subscriber: _ActorRef<Reception.Listing<Guest>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionist\/subscribe\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/receptionist\/subscribe\/key","title":"let key: Reception.Key<Guest>","type":"property"},{"path":"\/documentation\/distributedactors\/receptionist\/subscribe\/subscriber","title":"let subscriber: _ActorRef<Reception.Listing<Guest>>","type":"property"}],"path":"\/documentation\/distributedactors\/receptionist\/subscribe","title":"Receptionist.Subscribe","type":"class"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionist\/message","title":"Receptionist.Message","type":"typealias"}],"path":"\/documentation\/distributedactors\/receptionist","title":"Receptionist","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionistsettings\/ackpullreplicationintervalslow","title":"var ackPullReplicationIntervalSlow: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/receptionistsettings\/listingflushdelay","title":"var listingFlushDelay: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/receptionistsettings\/syncbatchsize","title":"var syncBatchSize: Int","type":"property"},{"path":"\/documentation\/distributedactors\/receptionistsettings\/traceloglevel","title":"var traceLogLevel: Logger.Level?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionistsettings\/behavior(settings:)","title":"func behavior(settings: ClusterSystemSettings) -> _Behavior<Receptionist.Message>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/receptionistsettings\/default","title":"static var `default`: ReceptionistSettings","type":"property"}],"path":"\/documentation\/distributedactors\/receptionistsettings","title":"ReceptionistSettings","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/actor(_:)","title":"static func actor<M>(_ActorContext<M>) -> ReplicaID","type":"method"},{"path":"\/documentation\/distributedactors\/replicaid\/uniquenode(_:)","title":"static func uniqueNode(UniqueNode) -> ReplicaID","type":"method"},{"path":"\/documentation\/distributedactors\/replicaid\/uniquenodeid(_:)","title":"static func uniqueNodeID(UniqueNode) -> ReplicaID","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/codingkeys\/value","title":"case value","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/distributedactors\/replicaid\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/distributedactors\/replicaid\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/replicaid\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/replicaid\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/replicaid\/codingkeys","title":"ReplicaID.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/actoraddress","title":"case actorAddress","type":"case"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/uniquenode","title":"case uniqueNode","type":"case"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/uniquenodeid","title":"case uniqueNodeID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/replicaid\/discriminatorkeys","title":"ReplicaID.DiscriminatorKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/'...(_:)-386wk","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/'...(_:)-696yz","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/replicaid\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/'...(_:)-386wk","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/'...(_:)-696yz","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/replicaid\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/defaultserializerid-yiws","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/replicaid\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/_(_:_:)-2b2za","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/_(_:_:)-4jxvt","title":"static func < (ReplicaID, ReplicaID) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/_=(_:_:)-37fdm","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/_=(_:_:)-8oeft","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/replicaid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/replicaid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/replicaid\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/replicaid\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/replicaid\/==(_:_:)","title":"static func == (ReplicaID, ReplicaID) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/replicaid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/defaultserializerid-udcd","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/replicaid\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/init(fromproto:context:)","title":"init(fromProto: _ProtoVersionReplicaID, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> _ProtoVersionReplicaID","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/replicaid\/protobufrepresentation","title":"ReplicaID.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/replicaid\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/replicaid","title":"ReplicaID","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/resolvecontext\/init(address:system:userinfo:)","title":"init(address: ActorAddress, system: ClusterSystem, userInfo: [CodingUserInfoKey : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/resolvecontext\/address","title":"var address: ActorAddress","type":"property"},{"path":"\/documentation\/distributedactors\/resolvecontext\/deeper","title":"var deeper: ResolveContext","type":"property"},{"path":"\/documentation\/distributedactors\/resolvecontext\/personaldeadletters","title":"var personalDeadLetters: _ActorRef<Message>","type":"property"},{"path":"\/documentation\/distributedactors\/resolvecontext\/selectorsegments","title":"var selectorSegments: ArraySlice<ActorPathSegment>","type":"property"},{"path":"\/documentation\/distributedactors\/resolvecontext\/system","title":"let system: ClusterSystem","type":"property"},{"path":"\/documentation\/distributedactors\/resolvecontext\/userinfo","title":"let userInfo: [CodingUserInfoKey : Any]","type":"property"}],"path":"\/documentation\/distributedactors\/resolvecontext","title":"ResolveContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serializationpoolsettings\/serializationgroups","title":"let serializationGroups: [[ActorPath]]","type":"property"}],"path":"\/documentation\/distributedactors\/serializationpoolsettings","title":"SerializationPoolSettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/servicediscoverysettings\/init(_:service:)","title":"init<Discovery, S>(Discovery, service: S)","type":"init"},{"path":"\/documentation\/distributedactors\/servicediscoverysettings\/init(_:service:mapinstancetonode:)","title":"init<Discovery, S>(Discovery, service: S, mapInstanceToNode: (Discovery.Instance) throws -> Node)","type":"init"}],"path":"\/documentation\/distributedactors\/servicediscoverysettings","title":"ServiceDiscoverySettings","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/*(_:_:)-64nbp","title":"static func * (TimeAmount, Int) -> TimeAmount","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/*(_:_:)-8zsag","title":"static func * (TimeAmount, Double) -> TimeAmount","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/+(_:_:)","title":"static func + (TimeAmount, TimeAmount) -> TimeAmount","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/-(_:_:)","title":"static func - (TimeAmount, TimeAmount) -> TimeAmount","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/\/(_:_:)-5z9fp","title":"static func \/ (TimeAmount, Int) -> TimeAmount","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/\/(_:_:)-677yc","title":"static func \/ (TimeAmount, Double) -> TimeAmount","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/days","title":"var days: Int64","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/hours","title":"var hours: Int64","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/iseffectivelyinfinite","title":"var isEffectivelyInfinite: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/microseconds","title":"var microseconds: Int64","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/milliseconds","title":"var milliseconds: Int64","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/minutes","title":"var minutes: Int64","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/nanoseconds","title":"let nanoseconds: Value","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/seconds","title":"var seconds: Int64","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/tonio","title":"var toNIO: NIO.TimeAmount","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/prettydescription(precision:)","title":"func prettyDescription(precision: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/value","title":"TimeAmount.Value","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/effectivelyinfinite","title":"static var effectivelyInfinite: TimeAmount","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/zero","title":"static var zero: TimeAmount","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/hours(_:)-7hc9s","title":"static func hours(Value) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/hours(_:)-7t5a5","title":"static func hours(Int) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/microseconds(_:)-3lxhs","title":"static func microseconds(Value) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/microseconds(_:)-7458z","title":"static func microseconds(Int) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/milliseconds(_:)-3zen5","title":"static func milliseconds(Int) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/milliseconds(_:)-7cy41","title":"static func milliseconds(Value) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/minutes(_:)-4dq0h","title":"static func minutes(Int) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/minutes(_:)-xsqr","title":"static func minutes(Value) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/nanoseconds(_:)-1olll","title":"static func nanoseconds(Int) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/nanoseconds(_:)-d2co","title":"static func nanoseconds(Value) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/seconds(_:)-5tqmb","title":"static func seconds(Int) -> TimeAmount","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/seconds(_:)-9n53t","title":"static func seconds(Value) -> TimeAmount","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/'...(_:)-1zxt2","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/'...(_:)-3b03l","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/timeamount\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/'...(_:)-1zxt2","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/'...(_:)-3b03l","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/timeamount\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/_(_:_:)-45jdw","title":"static func < (TimeAmount, TimeAmount) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/_(_:_:)-65ssw","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/_=(_:_:)-7ys8y","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/_=(_:_:)-g5k0","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/timeamount\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/prettydescription-9i3lt","title":"var prettyDescription: String","type":"property"},{"path":"\/documentation\/distributedactors\/timeamount\/prettydescription-w20v","title":"var prettyDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/prettydescription(depth:)","title":"func prettyDescription(depth: Int) -> String","type":"method"},{"path":"\/documentation\/distributedactors\/timeamount\/prettydescription(of:depth:)","title":"func prettyDescription(of: Any, depth: Int) -> String","type":"method"}],"path":"\/documentation\/distributedactors\/timeamount\/customprettystringconvertible-implementations","title":"CustomPrettyStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/timeamount\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeamount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/timeamount\/==(_:_:)","title":"static func == (TimeAmount, TimeAmount) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/timeamount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/timeamount","title":"TimeAmount","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeoutbaseddowningstrategysettings\/downunreachablemembersafter","title":"var downUnreachableMembersAfter: TimeAmount","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timeoutbaseddowningstrategysettings\/default","title":"static var `default`: TimeoutBasedDowningStrategySettings","type":"property"}],"path":"\/documentation\/distributedactors\/timeoutbaseddowningstrategysettings","title":"TimeoutBasedDowningStrategySettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timerkey\/init(_:)","title":"init<T>(T)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timerkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/timerkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timerkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/timerkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timerkey\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/timerkey\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timerkey\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/distributedactors\/timerkey\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timerkey\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/timerkey\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/timerkey\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/timerkey\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/timerkey","title":"TimerKey","type":"struct"},{"path":"\/documentation\/distributedactors\/traversalcontext","title":"TraversalContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/init(node:nid:)","title":"init(node: Node, nid: UniqueNodeID)","type":"init"},{"path":"\/documentation\/distributedactors\/uniquenode\/init(protocol:systemname:host:port:nid:)","title":"init(protocol: String, systemName: String, host: String, port: Int, nid: UniqueNodeID)","type":"init"},{"path":"\/documentation\/distributedactors\/uniquenode\/init(systemname:host:port:nid:)","title":"init(systemName: String, host: String, port: Int, nid: UniqueNodeID)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/host","title":"var host: String","type":"property"},{"path":"\/documentation\/distributedactors\/uniquenode\/nid","title":"let nid: UniqueNodeID","type":"property"},{"path":"\/documentation\/distributedactors\/uniquenode\/node","title":"var node: Node","type":"property"},{"path":"\/documentation\/distributedactors\/uniquenode\/port","title":"var port: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/id","title":"UniqueNode.ID","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/'...(_:)-27c7s","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/'...(_:)-320hw","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/uniquenode\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/'...(_:)-27c7s","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/'...(_:)-320hw","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/uniquenode\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/defaultserializerid-3aaj1","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/uniquenode\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/_(_:_:)-4avsa","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/_(_:_:)-88mvu","title":"static func < (UniqueNode, UniqueNode) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/_=(_:_:)-1x1y7","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/_=(_:_:)-2s52d","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/uniquenode\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/uniquenode\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/uniquenode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/uniquenode\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/uniquenode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenode\/==(_:_:)","title":"static func == (UniqueNode, UniqueNode) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/uniquenode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/defaultserializerid-8pd75","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/uniquenode\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/init(fromproto:context:)","title":"init(fromProto: _ProtoUniqueNode, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> _ProtoUniqueNode","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenode\/protobufrepresentation","title":"UniqueNode.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/uniquenode\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/uniquenode","title":"UniqueNode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/init(_:)","title":"init(UInt64)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/random()","title":"static func random() -> UniqueNodeID","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'...(_:)-54gg2","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'...(_:)-a0ch","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/uniquenodeid\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'...(_:)-54gg2","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'...(_:)-a0ch","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/uniquenodeid\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/_(_:_:)-4df5d","title":"static func < (UniqueNodeID, UniqueNodeID) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/_(_:_:)-8m2dj","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/_=(_:_:)-1kvaz","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/_=(_:_:)-6w68t","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/uniquenodeid\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/uniquenodeid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/uniquenodeid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/uniquenodeid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/uniquenodeid","title":"UniqueNodeID","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/version\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/version\/major","title":"var major: UInt8","type":"property"},{"path":"\/documentation\/distributedactors\/version\/minor","title":"var minor: UInt8","type":"property"},{"path":"\/documentation\/distributedactors\/version\/patch","title":"var patch: UInt8","type":"property"},{"path":"\/documentation\/distributedactors\/version\/reserved","title":"var reserved: UInt8","type":"property"},{"path":"\/documentation\/distributedactors\/version\/versionstring","title":"var versionString: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/version\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/version\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/version","title":"Version","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/init(_:_:)","title":"init(ReplicaID, Version)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/replicaid","title":"let replicaID: ReplicaID","type":"property"},{"path":"\/documentation\/distributedactors\/versiondot\/version-swift.property","title":"let version: Version","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/version-swift.typealias","title":"VersionDot.Version","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/'...(_:)-2h7wh","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/'...(_:)-53fp9","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/versiondot\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/'...(_:)-2h7wh","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/'...(_:)-53fp9","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/versiondot\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/defaultserializerid-m95e","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/versiondot\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/_(_:_:)-462nl","title":"static func < (VersionDot, VersionDot) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/_(_:_:)-4bet8","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/_=(_:_:)-4lj59","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/versiondot\/_=(_:_:)-84bsg","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/versiondot\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/versiondot\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/versiondot\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/defaultserializerid-7k87o","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/versiondot\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/init(fromproto:context:)","title":"init(fromProto: _ProtoVersionDot, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> _ProtoVersionDot","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versiondot\/protobufrepresentation","title":"VersionDot.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/versiondot\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/versiondot","title":"VersionDot","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/init()","title":"init()","type":"init"},{"path":"\/documentation\/distributedactors\/versionvector\/init(_:)-3xycu","title":"init(ReplicaVersion)","type":"init"},{"path":"\/documentation\/distributedactors\/versionvector\/init(_:)-7l8it","title":"init(VersionVector)","type":"init"},{"path":"\/documentation\/distributedactors\/versionvector\/init(_:)-df7h","title":"init([ReplicaVersion])","type":"init"},{"path":"\/documentation\/distributedactors\/versionvector\/init(_:at:)","title":"init(Version, at: ReplicaID)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/versionvector\/isnotempty","title":"var isNotEmpty: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/versionvector\/replicaids","title":"var replicaIDs: Dictionary<ReplicaID, Version>.Keys","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/compareto(_:)","title":"func compareTo(VersionVector) -> CausalRelation","type":"method"},{"path":"\/documentation\/distributedactors\/versionvector\/contains(_:_:)","title":"func contains(ReplicaID, Version) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/versionvector\/increment(at:)","title":"func increment(at: ReplicaID) -> Version","type":"method"},{"path":"\/documentation\/distributedactors\/versionvector\/merge(other:)","title":"func merge(other: VersionVector)","type":"method"},{"path":"\/documentation\/distributedactors\/versionvector\/prunereplica(_:)","title":"func pruneReplica(ReplicaID) -> VersionVector","type":"method"},{"path":"\/documentation\/distributedactors\/versionvector\/tocompactreplicanodeidproto(context:)","title":"func toCompactReplicaNodeIDProto(context: Serialization.Context) throws -> _ProtoVersionVector","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/subscript(_:)","title":"subscript(ReplicaID) -> Version","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/replicaversion","title":"VersionVector.ReplicaVersion","type":"typealias"},{"path":"\/documentation\/distributedactors\/versionvector\/version","title":"VersionVector.Version","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/empty","title":"static let empty: VersionVector","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/first(at:)","title":"static func first(at: ReplicaID) -> VersionVector","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/causalrelation\/concurrent","title":"case concurrent","type":"case"},{"path":"\/documentation\/distributedactors\/versionvector\/causalrelation\/happenedafter","title":"case happenedAfter","type":"case"},{"path":"\/documentation\/distributedactors\/versionvector\/causalrelation\/happenedbefore","title":"case happenedBefore","type":"case"},{"path":"\/documentation\/distributedactors\/versionvector\/causalrelation\/same","title":"case same","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/causalrelation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/versionvector\/causalrelation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/versionvector\/causalrelation","title":"VersionVector.CausalRelation","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/'...(_:)-20w34","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/'...(_:)-6zmnw","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/versionvector\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/'...(_:)-20w34","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/'...(_:)-6zmnw","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/versionvector\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/defaultserializerid-1p9aw","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/versionvector\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/_(_:_:)-2jumn","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/_(_:_:)-2yn9k","title":"static func < (VersionVector, VersionVector) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/_=(_:_:)-1xy66","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/_=(_:_:)-3yw2k","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/versionvector\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/prettydescription","title":"var prettyDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/prettydescription(depth:)","title":"func prettyDescription(depth: Int) -> String","type":"method"},{"path":"\/documentation\/distributedactors\/versionvector\/prettydescription(of:depth:)","title":"func prettyDescription(of: Any, depth: Int) -> String","type":"method"}],"path":"\/documentation\/distributedactors\/versionvector\/customprettystringconvertible-implementations","title":"CustomPrettyStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/versionvector\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/versionvector\/==(_:_:)","title":"static func == (VersionVector, VersionVector) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/versionvector\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/defaultserializerid-2j6jf","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/versionvector\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/init(fromproto:context:)","title":"init(fromProto: _ProtoVersionVector, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> _ProtoVersionVector","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/versionvector\/protobufrepresentation","title":"VersionVector.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/versionvector\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/versionvector","title":"VersionVector","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/walltimeclock\/==(_:_:)","title":"static func == (WallTimeClock, WallTimeClock) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/_(_:_:)-9s5ol","title":"static func < (WallTimeClock, WallTimeClock) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/walltimeclock\/init()","title":"init()","type":"init"},{"path":"\/documentation\/distributedactors\/walltimeclock\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/distributedactors\/walltimeclock\/init(timestamp:)","title":"init(timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/walltimeclock\/description","title":"var description: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/walltimeclock\/zero","title":"static let zero: WallTimeClock","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'...(_:)-4aeb5","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'...(_:)-5mfyn","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/walltimeclock\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'...(_:)-4aeb5","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'...(_:)-5mfyn","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/walltimeclock\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/walltimeclock\/_(_:_:)-3gvyt","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/_=(_:_:)-1teti","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/walltimeclock\/_=(_:_:)-7lezh","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/walltimeclock\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/walltimeclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/walltimeclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/walltimeclock","title":"WallTimeClock","type":"struct"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/workerpool\/selector\/dynamic(_:)","title":"case dynamic(Reception.Key<_ActorRef<Message>>)","type":"case"},{"path":"\/documentation\/distributedactors\/workerpool\/selector\/static(_:)","title":"case `static`([_ActorRef<Message>])","type":"case"}],"path":"\/documentation\/distributedactors\/workerpool\/selector","title":"WorkerPool.Selector","type":"enum"}],"path":"\/documentation\/distributedactors\/workerpool","title":"WorkerPool","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/workerpoolref\/address","title":"var address: ActorAddress","type":"property"},{"path":"\/documentation\/distributedactors\/workerpoolref\/path","title":"var path: ActorPath","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/workerpoolref\/tell(_:file:line:)","title":"func tell(Message, file: String, line: UInt)","type":"method"}],"path":"\/documentation\/distributedactors\/workerpoolref","title":"WorkerPoolRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/workerpoolsettings\/init(selector:)","title":"init(selector: WorkerPool<Message>.Selector)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/workerpoolsettings\/validate()","title":"func validate() throws -> WorkerPoolSettings","type":"method"}],"path":"\/documentation\/distributedactors\/workerpoolsettings","title":"WorkerPoolSettings","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedactorsprotocolversion","title":"let DistributedActorsProtocolVersion: DistributedActors.Version","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actormessage","title":"ActorMessage","type":"typealias"},{"path":"\/documentation\/distributedactors\/lamporttime","title":"LamportTime","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/incarnation","title":"case incarnation","type":"case"},{"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/node","title":"case node","type":"case"},{"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/path","title":"case path","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/actorcoding\/codingkeys","title":"ActorCoding.CodingKeys","type":"enum"}],"path":"\/documentation\/distributedactors\/actorcoding","title":"ActorCoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpatherror\/illegalactorpathelement(name:illegal:index:)","title":"case illegalActorPathElement(name: String, illegal: String, index: Int)","type":"case"},{"path":"\/documentation\/distributedactors\/actorpatherror\/illegalemptyactorpath","title":"case illegalEmptyActorPath","type":"case"},{"path":"\/documentation\/distributedactors\/actorpatherror\/illegalleadingspecialcharacter(name:illegal:)","title":"case illegalLeadingSpecialCharacter(name: String, illegal: Character)","type":"case"},{"path":"\/documentation\/distributedactors\/actorpatherror\/invalidpath(_:)","title":"case invalidPath(String)","type":"case"},{"path":"\/documentation\/distributedactors\/actorpatherror\/rootpathsegmentrequiredtostartwithslash(segment:)","title":"case rootPathSegmentRequiredToStartWithSlash(segment: ActorPathSegment)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/actorpatherror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/actorpatherror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/actorpatherror","title":"ActorPathError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/backoff\/constant(_:)","title":"static func constant(TimeAmount) -> ConstantBackoffStrategy","type":"method"},{"path":"\/documentation\/distributedactors\/backoff\/exponential(initialinterval:multiplier:capinterval:randomfactor:maxattempts:)","title":"static func exponential(initialInterval: TimeAmount, multiplier: Double, capInterval: TimeAmount, randomFactor: Double, maxAttempts: Int?) -> ExponentialBackoffStrategy","type":"method"}],"path":"\/documentation\/distributedactors\/backoff","title":"Backoff","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/==(_:_:)","title":"static func == (LeadershipChange, LeadershipChange) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/init(oldleader:newleader:file:line:)","title":"init?(oldLeader: Cluster.Member?, newLeader: Cluster.Member?, file: String, line: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/newleader","title":"let newLeader: Cluster.Member?","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/oldleader","title":"let oldLeader: Cluster.Member?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/defaultserializerid-3r72z","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/defaultserializerid-27e0y","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/init(fromproto:context:)","title":"init(fromProto: ProtobufRepresentation, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> ProtobufRepresentation","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/protobufrepresentation","title":"Cluster.LeadershipChange.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/cluster\/leadershipchange\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/leadershipchange","title":"Cluster.LeadershipChange","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/init(node:status:)","title":"init(node: UniqueNode, status: Cluster.MemberStatus)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/asdownifnotalready","title":"var asDownIfNotAlready: Member","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/member\/asreachable","title":"var asReachable: Member","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/member\/asunreachable","title":"var asUnreachable: Member","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/member\/reachability","title":"var reachability: Cluster.MemberReachability","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/member\/status","title":"var status: Cluster.MemberStatus","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/member\/uniquenode","title":"let uniqueNode: UniqueNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/moveforward(to:)","title":"func moveForward(to: Cluster.MemberStatus) -> Cluster.MembershipChange?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/member\/movingforward(to:)","title":"func movingForward(to: MemberStatus) -> Cluster.Member","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/ageordering","title":"static let ageOrdering: (Cluster.Member, Cluster.Member) -> Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/member\/lowestaddressordering","title":"static let lowestAddressOrdering: (Cluster.Member, Cluster.Member) -> Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/defaultserializerid-8isci","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/member\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/member\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/member\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/member\/==(_:_:)","title":"static func == (Cluster.Member, Cluster.Member) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/member\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/cluster\/member\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/defaultserializerid-3sqh6","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/member\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/init(fromproto:context:)","title":"init(fromProto: ProtobufRepresentation, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> ProtobufRepresentation","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/member\/protobufrepresentation","title":"Cluster.Member.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/cluster\/member\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/member","title":"Cluster.Member","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/init(arrayliteral:)","title":"init(arrayLiteral: Cluster.Member...)","type":"init"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/init(members:)","title":"init(members: [Cluster.Member])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/leader","title":"var leader: Cluster.Member?","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/leaderless","title":"var leaderless: Cluster.Membership","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/apply(event:)","title":"func apply(event: Cluster.Event) throws","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/applyleadershipchange(_:)","title":"func applyLeadershipChange(Cluster.LeadershipChange?) throws -> Cluster.LeadershipChange?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/applyleadershipchange(to:)","title":"func applyLeadershipChange(to: Cluster.Member?) throws -> Cluster.LeadershipChange?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/applymembershipchange(_:)","title":"func applyMembershipChange(Cluster.MembershipChange) -> Cluster.MembershipChange?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/applyreachabilitychange(_:)","title":"func applyReachabilityChange(Cluster.ReachabilityChange) -> Cluster.Member?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/count(atleast:)","title":"func count(atLeast: Cluster.MemberStatus) -> Int","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/count(withstatus:)","title":"func count(withStatus: Cluster.MemberStatus) -> Int","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/isleader(_:)-3qr82","title":"func isLeader(Cluster.Member) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/isleader(_:)-6no1c","title":"func isLeader(UniqueNode) -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/join(_:)","title":"func join(UniqueNode) -> Cluster.MembershipChange?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/joining(_:)","title":"func joining(UniqueNode) -> Cluster.Membership","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/mark(_:as:)","title":"func mark(UniqueNode, as: Cluster.MemberStatus) -> Cluster.MembershipChange?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/mark(_:reachability:)","title":"func mark(UniqueNode, reachability: Cluster.MemberReachability) -> Cluster.Member?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/marking(_:as:)","title":"func marking(UniqueNode, as: Cluster.MemberStatus) -> Cluster.Membership","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/member(_:)","title":"func member(Node) -> Cluster.Member?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/member(byuniquenodeid:)","title":"func member(byUniqueNodeID: UniqueNode.ID) -> Cluster.Member?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/members(atleast:reachability:)","title":"func members(atLeast: Cluster.MemberStatus, reachability: Cluster.MemberReachability?) -> [Cluster.Member]","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/members(atmost:reachability:)","title":"func members(atMost: Cluster.MemberStatus, reachability: Cluster.MemberReachability?) -> [Cluster.Member]","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/members(withstatus:reachability:)-6m6kx","title":"func members(withStatus: Cluster.MemberStatus, reachability: Cluster.MemberReachability?) -> [Cluster.Member]","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/members(withstatus:reachability:)-9xdj4","title":"func members(withStatus: Set<Cluster.MemberStatus>, reachability: Cluster.MemberReachability?) -> [Cluster.Member]","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/mergefrom(incoming:myself:)","title":"func mergeFrom(incoming: Cluster.Membership, myself: UniqueNode?) -> [Cluster.MembershipChange]","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/oldestmember()","title":"func oldestMember() -> Cluster.Member?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/removecompletely(_:)","title":"func removeCompletely(UniqueNode) -> Cluster.MembershipChange?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/removingcompletely(_:)","title":"func removingCompletely(UniqueNode) -> Cluster.Membership","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/uniquemember(_:)","title":"func uniqueMember(UniqueNode) -> Cluster.Member?","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/youngestmember()","title":"func youngestMember() -> Cluster.Member?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/arrayliteralelement","title":"Cluster.Membership.ArrayLiteralElement","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/empty","title":"static var empty: Cluster.Membership","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/defaultserializerid-9j3tb","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/membership\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/membership\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/prettydescription-5wuh8","title":"var prettyDescription: String","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/prettydescription-9uvyu","title":"var prettyDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/prettydescription(depth:)","title":"func prettyDescription(depth: Int) -> String","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/prettydescription(of:depth:)","title":"func prettyDescription(of: Any, depth: Int) -> String","type":"method"}],"path":"\/documentation\/distributedactors\/cluster\/membership\/customprettystringconvertible-implementations","title":"CustomPrettyStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/membership\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/==(_:_:)","title":"static func == (Cluster.Membership, Cluster.Membership) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/membership\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/cluster\/membership\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/defaultserializerid-8o0yj","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/membership\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/init(fromproto:context:)","title":"init(fromProto: _ProtoClusterMembership, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> _ProtoClusterMembership","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membership\/protobufrepresentation","title":"Cluster.Membership.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/cluster\/membership\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/membership","title":"Cluster.Membership","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/==(_:_:)","title":"static func == (MembershipChange, MembershipChange) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/isdown","title":"var isDown: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/isjoining","title":"var isJoining: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/isleaving","title":"var isLeaving: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/isremoval","title":"var isRemoval: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/isreplacement","title":"var isReplacement: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/isup","title":"var isUp: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/member","title":"var member: Member","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/node","title":"var node: UniqueNode","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/previousstatus","title":"var previousStatus: MemberStatus?","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/status","title":"let status: MemberStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/isatleast(_:)","title":"func isAtLeast(Cluster.MemberStatus) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/defaultserializerid-25ljr","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/defaultserializerid-y2iw","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/init(fromproto:context:)","title":"init(fromProto: ProtobufRepresentation, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> ProtobufRepresentation","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/protobufrepresentation","title":"Cluster.MembershipChange.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/cluster\/membershipchange\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/membershipchange","title":"Cluster.MembershipChange","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/reachabilitychange\/init(member:)","title":"init(member: Member)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/reachabilitychange\/member","title":"let member: Cluster.Member","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/reachabilitychange\/reachability","title":"var reachability: MemberReachability","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/reachabilitychange\/toreachable","title":"var toReachable: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/reachabilitychange\/tounreachable","title":"var toUnreachable: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/reachabilitychange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/reachabilitychange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/reachabilitychange","title":"Cluster.ReachabilityChange","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/event\/leadershipchange(_:)","title":"case leadershipChange(LeadershipChange)","type":"case"},{"path":"\/documentation\/distributedactors\/cluster\/event\/membershipchange(_:)","title":"case membershipChange(MembershipChange)","type":"case"},{"path":"\/documentation\/distributedactors\/cluster\/event\/reachabilitychange(_:)","title":"case reachabilityChange(ReachabilityChange)","type":"case"},{"path":"\/documentation\/distributedactors\/cluster\/event\/snapshot(_:)","title":"case snapshot(Membership)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/event\/defaultserializerid-12r3w","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/event\/any_protobufrepresentable-implementations","title":"Any_ProtobufRepresentable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/event\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/event\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/event\/defaultserializerid-ei8y","title":"static var defaultSerializerID: Serialization.SerializerID?","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/event\/serializationrepresentable-implementations","title":"SerializationRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/event\/init(fromproto:context:)","title":"init(fromProto: _ProtoClusterEvent, context: Serialization.Context) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/event\/toproto(context:)","title":"func toProto(context: Serialization.Context) throws -> _ProtoClusterEvent","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/event\/protobufrepresentation","title":"Cluster.Event.ProtobufRepresentation","type":"typealias"}],"path":"\/documentation\/distributedactors\/cluster\/event\/_protobufrepresentable-implementations","title":"_ProtobufRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/event","title":"Cluster.Event","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/reachable","title":"case reachable","type":"case"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/unreachable","title":"case unreachable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/isreachable","title":"var isReachable: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/isunreachable","title":"var isUnreachable: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/cluster\/memberreachability\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/memberreachability","title":"Cluster.MemberReachability","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/down","title":"case down","type":"case"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/joining","title":"case joining","type":"case"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/leaving","title":"case leaving","type":"case"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/removed","title":"case removed","type":"case"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/up","title":"case up","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/isdown","title":"var isDown: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/isjoining","title":"var isJoining: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/isleaving","title":"var isLeaving: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/isremoved","title":"var isRemoved: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/isup","title":"var isUp: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/isatleast(_:)","title":"func isAtLeast(Cluster.MemberStatus) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/lifecycleordering","title":"static let lifecycleOrdering: (Cluster.Member, Cluster.Member) -> Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'...(_:)-49ryb","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'...(_:)-6ok81","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'...(_:)-49ryb","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'...(_:)-6ok81","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/-implementations","title":" Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/_(_:_:)-6xjwm","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/_(_:_:)-8xuxr","title":"static func < (Cluster.MemberStatus, Cluster.MemberStatus) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/_=(_:_:)-4jzj7","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/_=(_:_:)-4u0qi","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/distributedactors\/cluster\/memberstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/memberstatus","title":"Cluster.MemberStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershiperror\/nonmemberleaderselected(_:wannabeleader:)","title":"case nonMemberLeaderSelected(Cluster.Membership, wannabeLeader: Cluster.Member)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/cluster\/membershiperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/cluster\/membershiperror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/cluster\/membershiperror","title":"Cluster.MembershipError","type":"enum"}],"path":"\/documentation\/distributedactors\/cluster","title":"Cluster","type":"enum"},{"path":"\/documentation\/distributedactors\/clusterreceptionist","title":"ClusterReceptionist","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemerror\/duplicateactorpath(path:)","title":"case duplicateActorPath(path: ActorPath)","type":"case"},{"path":"\/documentation\/distributedactors\/clustersystemerror\/shuttingdown(_:)","title":"case shuttingDown(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/clustersystemerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/clustersystemerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/clustersystemerror","title":"ClusterSystemError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deathpacterror\/unhandleddeathpact(_:myself:message:)","title":"case unhandledDeathPact(ActorAddress, myself: AddressableActorRef, message: String)","type":"case"},{"path":"\/documentation\/distributedactors\/deathpacterror\/unhandleddeathpacterror(_:myself:message:)","title":"case unhandledDeathPactError(ClusterSystem.ActorID, myself: ClusterSystem.ActorID, message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/deathpacterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/deathpacterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/deathpacterror","title":"DeathPactError","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/asynciterator\/next()","title":"func next() async -> Element?","type":"method"}],"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/asynciterator","title":"DistributedReception.GuestListing.AsyncIterator","type":"class"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/element","title":"DistributedReception.GuestListing.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/compactmap(_:)-4r5wk","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/compactmap(_:)-4wi8o","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/flatmap(_:)-63w5m","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/flatmap(_:)-7g91u","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/map(_:)-2q2kw","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/map(_:)-4cmca","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/distributedreception\/guestlisting","title":"DistributedReception.GuestListing","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/init(_:id:)","title":"init(Guest.Type, id: String)","type":"init"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/guesttype","title":"var guestType: Any.Type","type":"property"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/id","title":"let id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/distributedreception\/key\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/distributedactors\/distributedreception\/key\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/distributedreception\/key\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/distributedreception\/key\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/distributedreception\/key","title":"DistributedReception.Key","type":"struct"}],"path":"\/documentation\/distributedactors\/distributedreception","title":"DistributedReception","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/downingstrategydirective\/canceltimer(key:)","title":"case cancelTimer(key: TimerKey)","type":"case"},{"path":"\/documentation\/distributedactors\/downingstrategydirective\/markasdown(_:)","title":"case markAsDown(Set<Cluster.Member>)","type":"case"},{"path":"\/documentation\/distributedactors\/downingstrategydirective\/none","title":"case none","type":"case"},{"path":"\/documentation\/distributedactors\/downingstrategydirective\/starttimer(key:message:delay:)","title":"case startTimer(key: TimerKey, message: DowningStrategyMessage, delay: TimeAmount)","type":"case"}],"path":"\/documentation\/distributedactors\/downingstrategydirective","title":"DowningStrategyDirective","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/downingstrategymessage\/timeout(_:)","title":"case timeout(Cluster.Member)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/downingstrategymessage\/init(from:)","title":"init(from: Swift.Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/downingstrategymessage\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/downingstrategymessage\/encode(to:)","title":"func encode(to: Swift.Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/downingstrategymessage\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/downingstrategymessage\/init(context:from:using:)","title":"init(context: Serialization.Context, from: inout ByteBuffer, using: Serialization.Manifest) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/downingstrategymessage\/serialize(context:to:)","title":"func serialize(context: Serialization.Context, to: inout ByteBuffer) throws","type":"method"}],"path":"\/documentation\/distributedactors\/downingstrategymessage\/nontransportableactormessage-implementations","title":"NonTransportableActorMessage Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/downingstrategymessage","title":"DowningStrategyMessage","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/downingstrategysettings\/none","title":"case none","type":"case"},{"path":"\/documentation\/distributedactors\/downingstrategysettings\/timeout(_:)","title":"case timeout(TimeoutBasedDowningStrategySettings)","type":"case"}],"path":"\/documentation\/distributedactors\/downingstrategysettings","title":"DowningStrategySettings","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/illegalbehaviorerror\/illegaltransition(from:to:)","title":"case illegalTransition(from: _Behavior<Message>, to: _Behavior<Message>)","type":"case"},{"path":"\/documentation\/distributedactors\/illegalbehaviorerror\/notallowedasinitial(_:)","title":"case notAllowedAsInitial(_Behavior<Message>)","type":"case"},{"path":"\/documentation\/distributedactors\/illegalbehaviorerror\/toodeeplynestedbehavior(reached:depth:)","title":"case tooDeeplyNestedBehavior(reached: _Behavior<Message>, depth: Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/illegalbehaviorerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/illegalbehaviorerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/illegalbehaviorerror","title":"IllegalBehaviorError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nodedeathwatchererror\/attemptedtofailunknownaddress(_:_:)","title":"case attemptedToFailUnknownAddress(Cluster.Membership, UniqueNode)","type":"case"},{"path":"\/documentation\/distributedactors\/nodedeathwatchererror\/watcheractorwasnotlocal(watcheraddress:localnode:)","title":"case watcherActorWasNotLocal(watcherAddress: ActorAddress, localNode: UniqueNode?)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/nodedeathwatchererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/nodedeathwatchererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/nodedeathwatchererror","title":"NodeDeathWatcherError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/ondownactionstrategysettings\/gracefulshutdown(delay:)","title":"case gracefulShutdown(delay: TimeAmount)","type":"case"},{"path":"\/documentation\/distributedactors\/ondownactionstrategysettings\/none","title":"case none","type":"case"}],"path":"\/documentation\/distributedactors\/ondownactionstrategysettings","title":"OnDownActionStrategySettings","type":"enum"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/registered\/init(_:key:)","title":"init(Guest, key: Reception.Key<Guest>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/registered\/actor","title":"var actor: Guest","type":"property"},{"path":"\/documentation\/distributedactors\/reception\/registered\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/reception\/registered\/key","title":"let key: Reception.Key<Guest>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/registered\/init(from:)","title":"init(from: Swift.Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/reception\/registered\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/registered\/encode(to:)","title":"func encode(to: Swift.Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/reception\/registered\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/registered\/init(context:from:using:)","title":"init(context: Serialization.Context, from: inout ByteBuffer, using: Serialization.Manifest) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/registered\/serialize(context:to:)","title":"func serialize(context: Serialization.Context, to: inout ByteBuffer) throws","type":"method"}],"path":"\/documentation\/distributedactors\/reception\/registered\/nontransportableactormessage-implementations","title":"NonTransportableActorMessage Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/reception\/registered","title":"Reception.Registered","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/key\/init(_:id:)","title":"init(Guest.Type, id: String)","type":"init"},{"path":"\/documentation\/distributedactors\/reception\/key\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/key\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/key\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/reception\/key\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/key\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/reception\/key\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/key\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/reception\/key\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/key\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/distributedactors\/reception\/key\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/key\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/distributedactors\/reception\/key\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/reception\/key","title":"Reception.Key","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/listing\/==(_:_:)","title":"static func == (Listing<Guest>, Listing<Guest>) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/listing\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/distributedactors\/reception\/listing\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactors\/reception\/listing\/first","title":"var first: _ActorRef<Guest.Message>?","type":"property"},{"path":"\/documentation\/distributedactors\/reception\/listing\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/distributedactors\/reception\/listing\/refs","title":"var refs: LazyMapSequence<Set<AddressableActorRef>, _ActorRef<Guest.Message>>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/listing\/first(named:)","title":"func first(named: String) -> _ActorRef<Guest.Message>?","type":"method"},{"path":"\/documentation\/distributedactors\/reception\/listing\/first(where:)","title":"func first(where: (ActorAddress) -> Bool) -> _ActorRef<Guest.Message>?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/listing\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/distributedactors\/reception\/listing\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/listing\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/distributedactors\/reception\/listing\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/reception\/listing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/reception\/listing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/reception\/listing","title":"Reception.Listing","type":"struct"}],"path":"\/documentation\/distributedactors\/reception","title":"Reception","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/remotecall\/timeout","title":"static var timeout: TimeAmount?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/remotecall\/with(timeout:remotecall:)","title":"static func with<Response>(timeout: TimeAmount, remoteCall: () async throws -> Response) async rethrows -> Response","type":"method"}],"path":"\/documentation\/distributedactors\/remotecall","title":"RemoteCall","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/resolveerror\/illegalidentity(_:)","title":"case illegalIdentity(ClusterSystem.ActorID)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/resolveerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/resolveerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/resolveerror","title":"ResolveError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serializationerror\/alreadydefined(hint:serializerid:)","title":"case alreadyDefined(hint: String, serializerID: Serialization.SerializerID)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/emptyrepeatedfield(_:)","title":"case emptyRepeatedField(String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/missingfield(_:type:)","title":"case missingField(String, type: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/missingmanifest(hint:)","title":"case missingManifest(hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/missingserializationcontext(_:details:file:line:)","title":"case missingSerializationContext(Any.Type, details: String, file: String, line: UInt)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/noneedtoensureserializer","title":"case noNeedToEnsureSerializer","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/noserializerkeyavailablefor(hint:)","title":"case noSerializerKeyAvailableFor(hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/noserializerregisteredfor(manifest:hint:)","title":"case noSerializerRegisteredFor(manifest: Serialization.Manifest?, hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/nontransportablemessage(type:)","title":"case nonTransportableMessage(type: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/notabletodeserialize(hint:)","title":"case notAbleToDeserialize(hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/notenoughargumentsencoded(expected:have:)","title":"case notEnoughArgumentsEncoded(expected: Int, have: Int)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/reservedserializerid(hint:)","title":"case reservedSerializerID(hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/serializationerror(_:file:line:)","title":"case serializationError(Error, file: String, line: UInt)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/unabletocreatemanifest(hint:)","title":"case unableToCreateManifest(hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/unabletodeserialize(hint:)","title":"case unableToDeserialize(hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/unabletomakeserializer(hint:)","title":"case unableToMakeSerializer(hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/unabletoserialize(hint:)","title":"case unableToSerialize(hint: String)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/unabletosummontypefrommanifest(_:)","title":"case unableToSummonTypeFromManifest(Serialization.Manifest)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/unknownenumvalue(_:)","title":"case unknownEnumValue(Int)","type":"case"},{"path":"\/documentation\/distributedactors\/serializationerror\/wrongserializer(hint:)","title":"case wrongSerializer(hint: String)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serializationerror\/missingserializationcontext(_:_:file:line:)","title":"static func missingSerializationContext(Swift.Encoder, Any, file: String, line: UInt) -> SerializationError","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/serializationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/serializationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/serializationerror","title":"SerializationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/stasherror\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/distributedactors\/stasherror\/full","title":"case full","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/stasherror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/distributedactors\/stasherror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/stasherror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/stasherror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/stasherror","title":"StashError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/terminationcircumstances\/escalating(_:)","title":"case escalating(_Supervision.Failure)","type":"case"},{"path":"\/documentation\/distributedactors\/terminationcircumstances\/failed(_:)","title":"case failed(_Supervision.Failure)","type":"case"},{"path":"\/documentation\/distributedactors\/terminationcircumstances\/stopped","title":"case stopped","type":"case"}],"path":"\/documentation\/distributedactors\/terminationcircumstances","title":"TerminationCircumstances","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/workerpoolerror\/emptystaticworkerpool(_:)","title":"case emptyStaticWorkerPool(String)","type":"case"},{"path":"\/documentation\/distributedactors\/workerpoolerror\/illegalawaitnewworkersforstaticpoolconfigured(_:)","title":"case illegalAwaitNewWorkersForStaticPoolConfigured(String)","type":"case"},{"path":"\/documentation\/distributedactors\/workerpoolerror\/staticpoolexhausted(_:)","title":"case staticPoolExhausted(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactors\/workerpoolerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactors\/workerpoolerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactors\/workerpoolerror","title":"WorkerPoolError","type":"enum"}],"path":"\/documentation\/distributedactors","title":"DistributedActors","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/conditionlock\/init(value:)","title":"init(value: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/conditionlock\/value","title":"var value: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/conditionlock\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/conditionlock\/lock(whenvalue:)","title":"func lock(whenValue: T)","type":"method"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/conditionlock\/lock(whenvalue:timeoutseconds:)","title":"func lock(whenValue: T, timeoutSeconds: Double) -> Bool","type":"method"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/conditionlock\/unlock()","title":"func unlock()","type":"method"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/conditionlock\/unlock(withvalue:)","title":"func unlock(withValue: T)","type":"method"}],"path":"\/documentation\/distributedactorsconcurrencyhelpers\/conditionlock","title":"ConditionLock","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/lock\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/lock\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/lock\/unlock()","title":"func unlock()","type":"method"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/lock\/withlock(_:)","title":"func withLock<T>(() throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/distributedactorsconcurrencyhelpers\/lock\/withlockvoid(_:)","title":"func withLockVoid(() throws -> Void) rethrows","type":"method"}],"path":"\/documentation\/distributedactorsconcurrencyhelpers\/lock","title":"Lock","type":"class"}],"path":"\/documentation\/distributedactorsconcurrencyhelpers","title":"DistributedActorsConcurrencyHelpers","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actorsystemxctestcase\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/actorsystemxctestcase\/logcapture","title":"var logCapture: LogCapture","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/actorsystemxctestcase\/system","title":"var system: ClusterSystem","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/actorsystemxctestcase\/testkit","title":"var testKit: ActorTestKit","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actorsystemxctestcase\/setup()","title":"func setUp() async throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actorsystemxctestcase\/teardown()","title":"func tearDown()","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/actorsystemxctestcase","title":"ActorSystemXCTestCase","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/init(_:configuredwith:)","title":"init(ClusterSystem, configuredWith: (inout ActorTestKitSettings) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/settings","title":"let settings: ActorTestKitSettings","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/system","title":"let system: ClusterSystem","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/assertholds(for:interval:file:line:column:_:)","title":"func assertHolds(for: TimeAmount, interval: TimeAmount, file: StaticString, line: UInt, column: UInt, () throws -> Void) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/ensureregistered(key:expectedcount:expectedrefs:within:)","title":"func ensureRegistered<Message>(key: Reception.Key<_ActorRef<Message>>, expectedCount: Int, expectedRefs: Set<_ActorRef<Message>>?, within: TimeAmount) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/error(_:file:line:column:)","title":"func error(String?, file: StaticString, line: UInt, column: UInt) -> Error","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/eventually(within:interval:file:line:column:_:)","title":"func eventually<T>(within: TimeAmount, interval: TimeAmount, file: StaticString, line: UInt, column: UInt, () throws -> T) throws -> T","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/fail(_:file:line:column:)","title":"func fail(String?, file: StaticString, line: UInt, column: UInt) -> Error","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/makefakecontext(for:)","title":"func makeFakeContext<M>(for: _Behavior<M>) -> _ActorContext<M>","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/makefakecontext(of:)","title":"func makeFakeContext<M>(of: M.Type) -> _ActorContext<M>","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/maketestprobe(_:expecting:file:line:)","title":"func makeTestProbe<Message>(ActorNaming?, expecting: Message.Type, file: StaticString, line: UInt) -> ActorTestProbe<Message>","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestkit\/spawneventstreamtestprobe(_:subscribedto:file:line:column:)","title":"func spawnEventStreamTestProbe<Event>(ActorNaming?, subscribedTo: EventStream<Event>, file: String, line: UInt, column: UInt) -> ActorTestProbe<Event>","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/actortestkit","title":"ActorTestKit","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/address","title":"var address: ActorAddress","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/lastmessage","title":"var lastMessage: Message?","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/ref","title":"var ref: _ActorRef<Message>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/clearmessages()","title":"func clearMessages()","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/error(_:file:line:column:)","title":"func error(String?, file: StaticString, line: UInt, column: UInt) -> Error","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/eventuallyexpectlisting(expected:within:verbose:file:line:column:)","title":"func eventuallyExpectListing(expected: Set<_ActorRef<String>>, within: TimeAmount, verbose: Bool, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessage(_:file:line:column:)","title":"func expectMessage(Message, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessage(_:within:file:line:column:)","title":"func expectMessage(Message, within: TimeAmount, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessage(file:line:column:)","title":"func expectMessage(file: StaticString, line: UInt, column: UInt) throws -> Message","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessage(within:file:line:column:)","title":"func expectMessage(within: TimeAmount, file: StaticString, line: UInt, column: UInt) throws -> Message","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessagematching(file:line:column:_:)","title":"func expectMessageMatching<T>(file: StaticString, line: UInt, column: UInt, (Message) throws -> T?) throws -> T","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessagetype(_:file:line:column:)","title":"func expectMessageType<T>(T.Type, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessagetype(_:within:file:line:column:)","title":"func expectMessageType<T>(T.Type, within: TimeAmount, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessages(count:file:line:column:)","title":"func expectMessages(count: Int, file: StaticString, line: UInt, column: UInt) throws -> [Message]","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectmessages(count:within:file:line:column:)","title":"func expectMessages(count: Int, within: TimeAmount, file: StaticString, line: UInt, column: UInt) throws -> [Message]","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectnomessage(for:file:line:column:)","title":"func expectNoMessage(for: TimeAmount, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectnoterminationsignal(for:file:line:column:)","title":"func expectNoTerminationSignal(for: TimeAmount, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectsignal(expected:file:line:column:)","title":"func expectSignal(expected: _SystemMessage, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectsignal(file:line:column:)","title":"func expectSignal(file: StaticString, line: UInt, column: UInt) throws -> _SystemMessage","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectterminated(_:within:file:line:column:)","title":"func expectTerminated<T>(_ActorRef<T>, within: TimeAmount?, file: StaticString, line: UInt, column: UInt) throws -> _Signals.Terminated","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/expectterminatedinanyorder(_:file:line:column:)","title":"func expectTerminatedInAnyOrder([AddressableActorRef], file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/fishfor(_:within:file:line:column:_:)","title":"func fishFor<CaughtMessage>(CaughtMessage.Type, within: TimeAmount, file: StaticString, line: UInt, column: UInt, (Message) throws -> FishingDirective<CaughtMessage>) throws -> [CaughtMessage]","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/fishformessages(within:file:line:column:_:)","title":"func fishForMessages(within: TimeAmount, file: StaticString, line: UInt, column: UInt, (Message) throws -> MessageFishingDirective) throws -> [Message]","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/forward(_:to:file:line:)","title":"func forward<Message>(Message, to: _ActorRef<Message>, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/interceptallmessages(sentto:)","title":"func interceptAllMessages(sentTo: _Behavior<Message>) -> _Behavior<Message>","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/maybeexpectmessage()","title":"func maybeExpectMessage() throws -> Message?","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/maybeexpectmessage(within:)","title":"func maybeExpectMessage(within: TimeAmount) throws -> Message?","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/unwatch(_:)","title":"func unwatch<M>(_ActorRef<M>) -> _ActorRef<M>","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/watch(_:file:line:)","title":"func watch<M>(_ActorRef<M>, file: String, line: UInt) -> _ActorRef<M>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/naming","title":"static var naming: ActorNaming","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/fishingdirective\/catchcomplete(_:)","title":"case catchComplete(CaughtMessage)","type":"case"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/fishingdirective\/catchcontinue(_:)","title":"case catchContinue(CaughtMessage)","type":"case"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/fishingdirective\/complete","title":"case complete","type":"case"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/fishingdirective\/ignore","title":"case ignore","type":"case"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/fishingdirective","title":"ActorTestProbe.FishingDirective","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/catchcomplete","title":"case catchComplete","type":"case"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/catchcontinue","title":"case catchContinue","type":"case"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/complete","title":"case complete","type":"case"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/ignore","title":"case ignore","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/shouldbe(_:file:line:column:)","title":"func shouldBe<T>(T.Type, file: StaticString, line: UInt, column: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/shouldequal(_:file:line:column:)","title":"func shouldEqual(() -> Self, file: StaticString, line: UInt, column: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/shouldnotequal(_:file:line:column:)","title":"func shouldNotEqual(() -> Self, file: StaticString, line: UInt, column: UInt)","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingdirective","title":"ActorTestProbe.MessageFishingDirective","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror\/nomessagescaught","title":"case noMessagesCaught","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror\/shouldbe(_:file:line:column:)","title":"func shouldBe<T>(T.Type, file: StaticString, line: UInt, column: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror\/shouldequal(_:file:line:column:)","title":"func shouldEqual(() -> Self, file: StaticString, line: UInt, column: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror\/shouldnotequal(_:file:line:column:)","title":"func shouldNotEqual(() -> Self, file: StaticString, line: UInt, column: UInt)","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/messagefishingerror","title":"ActorTestProbe.MessageFishingError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/tell(_:file:line:)","title":"func tell(Message, file: String, line: UInt)","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe\/_receivesmessages-implementations","title":"_ReceivesMessages Implementations","type":"symbol"}],"path":"\/documentation\/distributedactorstestkit\/actortestprobe","title":"ActorTestProbe","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/alwaysprintcapturelogs","title":"var alwaysPrintCaptureLogs: Bool","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/capturelogs","title":"var captureLogs: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/assertassociated(_:withatleast:timeout:interval:verbose:file:line:column:)","title":"func assertAssociated(ClusterSystem, withAtLeast: UniqueNode, timeout: TimeAmount?, interval: TimeAmount?, verbose: Bool, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/assertassociated(_:withexactly:timeout:interval:verbose:file:line:column:)","title":"func assertAssociated(ClusterSystem, withExactly: UniqueNode, timeout: TimeAmount?, interval: TimeAmount?, verbose: Bool, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/assertassociated(_:withexactly:withatleast:timeout:interval:verbose:file:line:column:)","title":"func assertAssociated(ClusterSystem, withExactly: [UniqueNode], withAtLeast: [UniqueNode], timeout: TimeAmount?, interval: TimeAmount?, verbose: Bool, file: StaticString, line: UInt, column: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/assertleadernode(on:is:file:line:)","title":"func assertLeaderNode(on: ClusterSystem, is: UniqueNode?, file: StaticString, line: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/assertmemberdown(_:node:)","title":"func assertMemberDown(ActorTestProbe<Cluster.Event>, node: UniqueNode) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/assertmemberstatus(on:node:atleast:file:line:)","title":"func assertMemberStatus(on: ClusterSystem, node: UniqueNode, atLeast: Cluster.MemberStatus, file: StaticString, line: UInt) throws -> Cluster.MemberStatus?","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/assertmemberstatus(on:node:is:file:line:)","title":"func assertMemberStatus(on: ClusterSystem, node: UniqueNode, is: Cluster.MemberStatus, file: StaticString, line: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/assertnotassociated(system:node:timeout:interval:verbose:)","title":"func assertNotAssociated(system: ClusterSystem, node: UniqueNode, timeout: TimeAmount?, interval: TimeAmount?, verbose: Bool) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/capturedlogs(of:)","title":"func capturedLogs(of: ClusterSystem) -> LogCapture","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/configureactorsystem(settings:)","title":"func configureActorSystem(settings: inout ClusterSystemSettings)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/configurelogcapture(settings:)","title":"func configureLogCapture(settings: inout LogCapture.Settings)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/ensurenodes(_:on:within:nodes:file:line:)-5oh8l","title":"func ensureNodes(Cluster.MemberStatus, on: ClusterSystem?, within: TimeAmount, nodes: [UniqueNode], file: StaticString, line: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/ensurenodes(_:on:within:nodes:file:line:)-6x2a5","title":"func ensureNodes(Cluster.MemberStatus, on: ClusterSystem?, within: TimeAmount, nodes: UniqueNode..., file: StaticString, line: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/ensurenodes(atleast:on:within:nodes:file:line:)-1qpjz","title":"func ensureNodes(atLeast: Cluster.MemberStatus, on: ClusterSystem?, within: TimeAmount, nodes: [UniqueNode], file: StaticString, line: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/ensurenodes(atleast:on:within:nodes:file:line:)-ieu2","title":"func ensureNodes(atLeast: Cluster.MemberStatus, on: ClusterSystem?, within: TimeAmount, nodes: UniqueNode..., file: StaticString, line: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/joinnodes(node:with:ensurewithin:ensuremembers:file:line:)","title":"func joinNodes(node: ClusterSystem, with: ClusterSystem, ensureWithin: TimeAmount?, ensureMembers: Cluster.MemberStatus?, file: StaticString, line: UInt) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/nextport()","title":"func nextPort() -> Int","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/pinfomembership(_:file:line:)","title":"func pinfoMembership(ClusterSystem, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/printallcapturedlogs()","title":"func printAllCapturedLogs()","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/printcapturedlogs(of:)","title":"func printCapturedLogs(of: ClusterSystem)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/resolveref(_:type:address:on:)","title":"func resolveRef<M>(ClusterSystem, type: M.Type, address: ActorAddress, on: ClusterSystem) -> _ActorRef<M>","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/setupnode(_:_:)","title":"func setUpNode(String, ((inout ClusterSystemSettings) -> Void)?) async -> ClusterSystem","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/setuppair(_:)","title":"func setUpPair(((inout ClusterSystemSettings) -> Void)?) async -> (ClusterSystem, ClusterSystem)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/teardown()","title":"func tearDown()","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase\/testkit(_:)","title":"func testKit(ClusterSystem) -> ActorTestKit","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/clusteredactorsystemsxctestcase","title":"ClusteredActorSystemsXCTestCase","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/settings\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/settings\/excludeactorpaths","title":"var excludeActorPaths: Set<String>","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/settings\/excludegrep","title":"var excludeGrep: Set<String>","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/settings\/filteractorpaths","title":"var filterActorPaths: Set<String>","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/settings\/grep","title":"var grep: Set<String>","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/settings\/ignoredmetadata","title":"var ignoredMetadata: Set<String>","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/settings\/minimumloglevel","title":"var minimumLogLevel: Logger.Level","type":"property"}],"path":"\/documentation\/distributedactorstestkit\/logcapture\/settings","title":"LogCapture.Settings","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/init(settings:)","title":"init(settings: Settings)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/deadletterlogs","title":"var deadLetterLogs: [CapturedLogMessage]","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/logs","title":"var logs: [CapturedLogMessage]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/awaitlogcontaining(_:text:within:file:line:)","title":"func awaitLogContaining(ActorTestKit, text: String, within: TimeAmount, file: StaticString, line: UInt) throws -> CapturedLogMessage","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/grep(_:metadata:)","title":"func grep(String, metadata: [String : String]) -> [CapturedLogMessage]","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/logger(label:)","title":"func logger(label: String) -> Logger","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/printiffailed(_:)","title":"func printIfFailed(XCTestRun?)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/printlogs()","title":"func printLogs()","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/logcapture\/shouldcontain(prefix:message:grep:at:expectedfile:expectedline:failtest:file:line:column:)","title":"func shouldContain(prefix: String?, message: String?, grep: String?, at: Logger.Level?, expectedFile: String?, expectedLine: Int, failTest: Bool, file: StaticString, line: UInt, column: UInt) throws -> CapturedLogMessage","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/logcapture","title":"LogCapture","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/init(_:)","title":"init(ClusterSystem)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/children","title":"var children: _Children","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/log","title":"var log: Logger","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/myself","title":"var myself: _ActorRef<Message>","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/path","title":"var path: ActorPath","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/props","title":"var props: _Props","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/system","title":"var system: ClusterSystem","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/stop(child:)","title":"func stop<M>(child: _ActorRef<M>) throws","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/unwatch(_:file:line:)","title":"func unwatch<Watchee>(Watchee, file: String, line: UInt) -> Watchee","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext\/watch(_:with:file:line:)","title":"func watch<Watchee>(Watchee, with: Message?, file: String, line: UInt) -> Watchee","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/mock_actorcontext","title":"Mock_ActorContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/probeinterceptor\/init(probe:)","title":"init(probe: ActorTestProbe<Message>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/probeinterceptor\/interceptmessage(target:context:message:)","title":"func interceptMessage(target: _Behavior<Message>, context: _ActorContext<Message>, message: Message) throws -> _Behavior<Message>","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/probeinterceptor","title":"ProbeInterceptor","type":"class"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/actortestkitsettings","title":"ActorTestKitSettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/callsiteerror\/init(callsite:explained:)","title":"init(callSite: CallSiteInfo, explained: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/callsiteerror\/callsite","title":"let callSite: CallSiteInfo","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/callsiteerror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/callsiteerror\/explained","title":"let explained: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/callsiteerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactorstestkit\/callsiteerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactorstestkit\/callsiteerror","title":"CallSiteError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/callsiteinfo\/appliedassertionname","title":"let appliedAssertionName: String","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/callsiteinfo\/column","title":"let column: UInt","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/callsiteinfo\/file","title":"let file: StaticString","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/callsiteinfo\/line","title":"let line: UInt","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/callsiteinfo\/error(_:failtest:)","title":"func error(String, failTest: Bool) -> CallSiteError","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/callsiteinfo","title":"CallSiteInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/capturedlogmessage\/date","title":"let date: Date","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/capturedlogmessage\/file","title":"let file: String","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/capturedlogmessage\/function","title":"let function: String","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/capturedlogmessage\/level","title":"let level: Logger.Level","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/capturedlogmessage\/line","title":"let line: UInt","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/capturedlogmessage\/message","title":"var message: Logger.Message","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/capturedlogmessage\/metadata","title":"var metadata: Logger.Metadata?","type":"property"}],"path":"\/documentation\/distributedactorstestkit\/capturedlogmessage","title":"CapturedLogMessage","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/eventuallyerror\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/distributedactorstestkit\/eventuallyerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/eventuallyerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactorstestkit\/eventuallyerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactorstestkit\/eventuallyerror","title":"EventuallyError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/testerror\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/testerror\/message","title":"let message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/testerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/testerror\/shouldbe(_:file:line:column:)","title":"func shouldBe<T>(T.Type, file: StaticString, line: UInt, column: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testerror\/shouldequal(_:file:line:column:)","title":"func shouldEqual(() -> Self, file: StaticString, line: UInt, column: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testerror\/shouldnotequal(_:file:line:column:)","title":"func shouldNotEqual(() -> Self, file: StaticString, line: UInt, column: UInt)","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/testerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/testerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactorstestkit\/testerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactorstestkit\/testerror","title":"TestError","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tobe(_:)","title":"func toBe<Other>(Other.Type)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tobeempty()","title":"func toBeEmpty()","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tobegreaterthan(_:)","title":"func toBeGreaterThan(T)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tobegreaterthanorequal(_:)","title":"func toBeGreaterThanOrEqual(T)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tobelessthan(_:)","title":"func toBeLessThan(T)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tobelessthanorequal(_:)","title":"func toBeLessThanOrEqual(T)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tobenotempty()","title":"func toBeNotEmpty()","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tocontain(_:)","title":"func toContain(T.Element)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tocontain(_:negate:)","title":"func toContain(String, negate: Bool)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tocontain(where:)","title":"func toContain(where: (T.Element) -> Bool)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/toendwith(suffix:)","title":"func toEndWith<PossibleSuffix>(suffix: PossibleSuffix)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/toequal(_:)","title":"func toEqual(T)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tonotcontain(_:)-26wdp","title":"func toNotContain(T.Element)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tonotcontain(_:)-5kwbg","title":"func toNotContain(String)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tonotequal(_:)","title":"func toNotEqual(T)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/testmatchers\/tostartwith(prefix:)","title":"func toStartWith<PossiblePrefix>(prefix: PossiblePrefix)","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/testmatchers","title":"TestMatchers","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/shouldnothappen(_:file:line:column:)","title":"func shouldNotHappen(String, file: StaticString, line: UInt, column: UInt) -> Error","type":"func"},{"path":"\/documentation\/distributedactorstestkit\/shouldnotthrow(file:line:column:_:)-52inv","title":"func shouldNotThrow<T>(file: StaticString, line: UInt, column: UInt, () async throws -> T) async throws -> T","type":"func"},{"path":"\/documentation\/distributedactorstestkit\/shouldnotthrow(file:line:column:_:)-9vd4u","title":"func shouldNotThrow<T>(file: StaticString, line: UInt, column: UInt, () throws -> T) throws -> T","type":"func"},{"path":"\/documentation\/distributedactorstestkit\/shouldthrow(expected:file:line:column:_:)","title":"func shouldThrow<E, T>(expected: E.Type, file: StaticString, line: UInt, column: UInt, () throws -> T) throws","type":"func"},{"path":"\/documentation\/distributedactorstestkit\/shouldthrow(file:line:column:_:)-66ips","title":"func shouldThrow<T>(file: StaticString, line: UInt, column: UInt, () async throws -> T) async throws -> Error","type":"func"},{"path":"\/documentation\/distributedactorstestkit\/shouldthrow(file:line:column:_:)-7iobg","title":"func shouldThrow<T>(file: StaticString, line: UInt, column: UInt, () throws -> T) throws -> Error","type":"func"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/expectederrortobethrown","title":"case expectedErrorToBeThrown","type":"case"},{"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/unexpectederrorwasthrown","title":"case unexpectedErrorWasThrown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/shouldbe(_:file:line:column:)","title":"func shouldBe<T>(T.Type, file: StaticString, line: UInt, column: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/shouldequal(_:file:line:column:)","title":"func shouldEqual(() -> Self, file: StaticString, line: UInt, column: UInt)","type":"method"},{"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/shouldnotequal(_:file:line:column:)","title":"func shouldNotEqual(() -> Self, file: StaticString, line: UInt, column: UInt)","type":"method"}],"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/distributedactorstestkit\/shouldmatchererror","title":"ShouldMatcherError","type":"enum"}],"path":"\/documentation\/distributedactorstestkit","title":"DistributedActorsTestKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}