{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"listingFlushDelay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/TimeAmount","preciseIdentifier":"s:17DistributedActors10TimeAmountV","text":"TimeAmount"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This optimizes for the following scenario:"},{"type":"text","text":" "},{"type":"text","text":"When a group of registered actors terminates they all will be removed from the receptionist via their individual"},{"type":"text","text":" "},{"type":"text","text":"Terminated singles being received by the receptionist. The receptionist will want to update any subscribers to keys"},{"type":"text","text":" "},{"type":"text","text":"that those terminated actors were registered with. However if it were to eagerly push updated listings for each received"},{"type":"text","text":" "},{"type":"text","text":"terminated signal this could cause a lot of message traffic, i.e. a listing with 100 actors, followed by a listing with 99 actors,"},{"type":"text","text":" "},{"type":"text","text":"followed by a listing with 98 actors, and so on. It is more efficient, and equally as acceptable for listing updates to rather"},{"type":"text","text":" "},{"type":"text","text":"be delayed for moments, and the listing then be flushed with the updated listing, saving a lot of collection copies as a result."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The same applies for spawning thousands of actors at once which are all registering themselves with a key upon spawning."},{"type":"text","text":" "},{"type":"text","text":"It is more efficient to sent a bulk updated listing to other peers rather than it is to send thousands of one by one"},{"type":"text","text":" "},{"type":"text","text":"updated listings."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that this also makes the “local” receptionist “feel like” the distributed one, where there is a larger delay in"},{"type":"text","text":" "},{"type":"text","text":"spreading the information between peers. In a way, this is desirable – if two actors necessarily need to talk to one another"},{"type":"text","text":" "},{"type":"text","text":"as soon as possible they SHOULD NOT be using the receptionist to discover each other, but should rather know about each other"},{"type":"text","text":" "},{"type":"text","text":"thanks to e.g. one of them being “well known” or implementing a direct “introduction” pattern between them."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The simplest pattern to introduce two actors is to have one be the parent of the other, then the parent can"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"immediately"}]},{"type":"text","text":" send messages to the child, even as it’s still being started."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/receptionistsettings\/listingflushdelay"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ReceptionistSettings\/listingFlushDelay","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"In order to avoid high churn when thousands of actors are registered (or removed) at once,"},{"type":"text","text":" "},{"type":"text","text":"listing notifications are sent after a pre-defined delay."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"listingFlushDelay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:17DistributedActors10TimeAmountV"}],"title":"listingFlushDelay","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:17DistributedActors20ReceptionistSettingsV17listingFlushDelayAA10TimeAmountVvp","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors","doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ReceptionistSettings"]]},"references":{"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/ReceptionistSettings/listingFlushDelay":{"role":"symbol","title":"listingFlushDelay","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"listingFlushDelay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:17DistributedActors10TimeAmountV"}],"abstract":[{"type":"text","text":"In order to avoid high churn when thousands of actors are registered (or removed) at once,"},{"type":"text","text":" "},{"type":"text","text":"listing notifications are sent after a pre-defined delay."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ReceptionistSettings\/listingFlushDelay","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/receptionistsettings\/listingflushdelay"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/ReceptionistSettings":{"role":"symbol","title":"ReceptionistSettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReceptionistSettings"}],"abstract":[],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ReceptionistSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReceptionistSettings"}],"url":"\/documentation\/distributedactors\/receptionistsettings"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/TimeAmount":{"role":"symbol","title":"TimeAmount","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeAmount"}],"abstract":[{"type":"text","text":"Represents a time "},{"type":"emphasis","inlineContent":[{"type":"text","text":"interval"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/TimeAmount","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimeAmount"}],"url":"\/documentation\/distributedactors\/timeamount"}}}