{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Subsequent "},{"type":"codeVoice","code":"next()"},{"type":"text","text":" invocations cause the base interval amount to grow exponentially (as powers of two)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additional random “noise” is applied to the backoff value, in order to avoid multiple actors or nodes re-trying"},{"type":"text","text":" "},{"type":"text","text":"at the same exact rate. The effective backoff time amount is calculated as current base interval multiplied by a random"},{"type":"text","text":" "},{"type":"text","text":"value within the range: "},{"type":"codeVoice","code":"(1 - randomFactor)...(1 + randomFactor)"},{"type":"text","text":". Meaning that the actual backoff value will “oscillate”"},{"type":"text","text":" "},{"type":"text","text":"around the expected backoff base, but ever so slightly different each time it is calculated, allowing multiple actors or nodes"},{"type":"text","text":" "},{"type":"text","text":"to attempt retries without causing as much of a tendering heard effect upon the (possibly shared) target resource."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example backoff values for "},{"type":"codeVoice","code":".exponential(initialInterval: .milliseconds(100), randomFactor: 0.25)"},{"type":"text","text":":"}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Attempt"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"multiplier"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"randomFact"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"(base)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"(randomized range)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"1"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"1.5"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"0.25"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"100ms"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"75ms …  125ms"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"2"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"1.5"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"0.25"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"150ms"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"~127ms … ~188ms"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"3"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"1.5"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"0.25"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"225ms"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"~191ms … ~281ms"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"4"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"1.5"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"0.25"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"~338ms"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"~287ms … ~422ms"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"5"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"1.5"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"0.25"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"~506ms"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"~680ms … ~633ms"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"…"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"…"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"…"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"…"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"…"}]}]]],"header":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally the "},{"type":"codeVoice","code":"maxInterval"},{"type":"text","text":" can be used to "},{"type":"emphasis","inlineContent":[{"type":"text","text":"cap"}]},{"type":"text","text":" the backoff time amount."},{"type":"text","text":" "},{"type":"text","text":"Note that the backoff will continue yielding the "},{"type":"codeVoice","code":"maxInterval"},{"type":"text","text":" infinitely times if it has been exceeded,"},{"type":"text","text":" "},{"type":"text","text":"and other means of preventing infinite retries should be applied."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By changing the "},{"type":"codeVoice","code":"multiplier"},{"type":"text","text":" it is possible to control the rate at which backoff intervals grow over subsequent attempts."},{"type":"text","text":" "},{"type":"text","text":"The default value of "},{"type":"codeVoice","code":"1.5"},{"type":"text","text":" results in a 50% growth of for each "},{"type":"codeVoice","code":"next()"},{"type":"text","text":" call. Applications wanting to double the backoff"},{"type":"text","text":" "},{"type":"text","text":"interval upon each attempt may set the "},{"type":"codeVoice","code":"multiplier"},{"type":"text","text":" would be set to "},{"type":"codeVoice","code":"2.0"},{"type":"text","text":". Higher multiplier values are also accepted,"},{"type":"text","text":" "},{"type":"text","text":"but not frequently used."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/exponentialbackoffstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/BackoffStrategy"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ExponentialBackoffStrategy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Backoff strategy exponentially yielding greater time amounts each time when triggered."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"title":"ExponentialBackoffStrategy","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:17DistributedActors26ExponentialBackoffStrategyV","modules":[{"name":"DistributedActors"}],"navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}]},"hierarchy":{"paths":[["doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ExponentialBackoffStrategy\/next()","doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ExponentialBackoffStrategy\/reset()"]},{"title":"Enumerations","identifiers":["doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ExponentialBackoffStrategy\/Defaults"]}],"references":{"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/ExponentialBackoffStrategy/next()":{"role":"symbol","title":"next()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:17DistributedActors10TimeAmountV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns next backoff interval to use OR "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no further retries should be performed."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ExponentialBackoffStrategy\/next()","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/next()"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/ExponentialBackoffStrategy/Defaults":{"role":"symbol","title":"ExponentialBackoffStrategy.Defaults","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Defaults"}],"abstract":[{"type":"text","text":"Default values for the backoff parameters."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ExponentialBackoffStrategy\/Defaults","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Defaults"}],"url":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/defaults"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/ExponentialBackoffStrategy":{"role":"symbol","title":"ExponentialBackoffStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"abstract":[{"type":"text","text":"Backoff strategy exponentially yielding greater time amounts each time when triggered."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ExponentialBackoffStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"url":"\/documentation\/distributedactors\/exponentialbackoffstrategy"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/ExponentialBackoffStrategy/reset()":{"role":"symbol","title":"reset()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Reset the strategy to its initial backoff amount."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/ExponentialBackoffStrategy\/reset()","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/exponentialbackoffstrategy\/reset()"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/BackoffStrategy":{"role":"symbol","title":"BackoffStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" abstracts over logic which computes appropriate time amounts to back off at, for a specific call."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/BackoffStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/distributedactors\/backoffstrategy"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"}}}