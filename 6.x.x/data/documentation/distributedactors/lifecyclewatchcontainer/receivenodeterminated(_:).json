{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveNodeTerminated"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"terminatedNode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/UniqueNode","preciseIdentifier":"s:17DistributedActors10UniqueNodeV","text":"UniqueNode"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Causes "},{"type":"codeVoice","code":"Terminated"},{"type":"text","text":" signals to be triggered for any such watched remote actor."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Does NOT immediately handle these "},{"type":"codeVoice","code":"Terminated"},{"type":"text","text":" signals, they are treated as any other normal signal would,"},{"type":"text","text":" "},{"type":"text","text":"such that the user can have a chance to handle and react to them."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/lifecyclewatchcontainer\/receivenodeterminated(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/LifecycleWatchContainer\/receiveNodeTerminated(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Performs cleanup of any actor references that were located on the now terminated node."}],"kind":"symbol","metadata":{"role":"symbol","title":"receiveNodeTerminated(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveNodeTerminated"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UniqueNode","preciseIdentifier":"s:17DistributedActors10UniqueNodeV"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:17DistributedActors23LifecycleWatchContainerC21receiveNodeTerminatedyyAA06UniqueG0VF","extendedModule":"DistributedActors","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors","doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/LifecycleWatchContainer"]]},"references":{"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/LifecycleWatchContainer/receiveNodeTerminated(_:)":{"role":"symbol","title":"receiveNodeTerminated(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveNodeTerminated"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UniqueNode","preciseIdentifier":"s:17DistributedActors10UniqueNodeV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Performs cleanup of any actor references that were located on the now terminated node."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/LifecycleWatchContainer\/receiveNodeTerminated(_:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/lifecyclewatchcontainer\/receivenodeterminated(_:)"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/LifecycleWatchContainer":{"role":"symbol","title":"LifecycleWatchContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LifecycleWatchContainer"}],"abstract":[{"type":"text","text":"Implements watching distributed actors for termination."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/LifecycleWatchContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LifecycleWatchContainer"}],"url":"\/documentation\/distributedactors\/lifecyclewatchcontainer"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://com.apple.swift-distributed-actors/documentation/DistributedActors/UniqueNode":{"role":"symbol","title":"UniqueNode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UniqueNode"}],"abstract":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"unique"}]},{"type":"text","text":" node which includes also the node’s unique "},{"type":"codeVoice","code":"UID"},{"type":"text","text":" which is used to disambiguate"},{"type":"text","text":" "},{"type":"text","text":"multiple incarnations of a system on the same host\/port part – similar to how an "},{"type":"codeVoice","code":"ActorIncarnation"},{"type":"text","text":" "},{"type":"text","text":"is used on the per-actor level."}],"identifier":"doc:\/\/com.apple.swift-distributed-actors\/documentation\/DistributedActors\/UniqueNode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UniqueNode"}],"url":"\/documentation\/distributedactors\/uniquenode"}}}